# -*- coding: utf-8 -*-

import asyncio
import logging
import os
from contextlib import suppress
from random import choice

from aiogram import Bot, types, Dispatcher
from aiogram.types import InputMediaPhoto
from aiogram.utils.exceptions import MessageCantBeDeleted, MessageToDeleteNotFound
from googletrans import Translator

import base
import functions as fn
import keyboards as kb

logging.basicConfig(level=logging.INFO)
bot = Bot(token="5911147477:AAEsJtQB0A4DQlXPbvdefbQu2EyvYjGGCok", parse_mode="HTML")
dp = Dispatcher(bot)
translator = Translator()


async def edit_media(callback_query, url, caption, keyboard):
    await callback_query.message.edit_media(InputMediaPhoto(media=url, caption=caption), reply_markup=keyboard)


@dp.message_handler(text="/start")
async def start_(msg: types.Message):
    # /start
    await bot.send_photo(str(msg.from_user.id),
                         photo="https://i.postimg.cc/WbC1cr9r/file-1-1.jpg",
                         caption="üëã <b>–∏—Ç–∞–∫</b>, —ç—Ç–æ - <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>\nüåç –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
                         reply_markup=kb.kb_main)


@dp.callback_query_handler(lambda c: c.data == 'main_menu')
async def start_2(callback_query: types.CallbackQuery):
    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query, "https://i.postimg.cc/WbC1cr9r/file-1-1.jpg",
                     "üëã <b>–∏—Ç–∞–∫</b>, —ç—Ç–æ - <b>–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.</b>\nüåç –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", kb.kb_main)


@dp.callback_query_handler(lambda c: c.data == 'english' or c.data == 'german' or c.data == 'back')
async def start_lang(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    # –ê–Ω–≥–ª–∏–π—Å–∫–∏–π (—Å—Ç–∞—Ä—Ç)
    if callback_query.data == "english":
        base.language(str(callback_query.from_user.id), "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π", set=True, get=False)
        await edit_media(callback_query, "https://i.postimg.cc/2S4gpjqt/2023-03-21-190241474.png",
                         f"üá¨üáß —è–∑—ã–∫: <b>{base.language(str(callback_query.from_user.id), '', set=False, get=True)}</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
                         kb.kb_english)


    # –ù–µ–º–µ—Ü–∫–∏–π (—Å—Ç–∞—Ä—Ç)
    elif callback_query.data == "german":
        base.language(str(callback_query.from_user.id), "–Ω–µ–º–µ—Ü–∫–∏–π", set=True, get=False)
        await edit_media(callback_query, "https://i.postimg.cc/Dz7vHMzq/2023-03-21-190610782.png",
                         f"üá©üá™ —è–∑—ã–∫: <b>{base.language(str(callback_query.from_user.id), '', set=False, get=True)}</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
                         kb.kb_english)

    # –ù–∞–∑–∞–¥
    elif callback_query.data == "back":
        if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
            await edit_media(callback_query, "https://i.postimg.cc/2S4gpjqt/2023-03-21-190241474.png",
                             f"üá¨üáß —è–∑—ã–∫: <b>{base.language(str(callback_query.from_user.id), '', set=False, get=True)}</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
                             kb.kb_english)
        else:
            await edit_media(callback_query, "https://i.postimg.cc/Dz7vHMzq/2023-03-21-190610782.png",
                             f"üá©üá™ —è–∑—ã–∫: <b>{base.language(str(callback_query.from_user.id), '', set=False, get=True)}</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:",
                             kb.kb_english)


# –°–ª–æ–≤–æ –¥–Ω—è
@dp.callback_query_handler(lambda c: c.data == "word_of_day")
async def word_of_the_day(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    file = InputMediaPhoto(media="https://i.postimg.cc/d3z66dQN/photo-2023-03-21-11-50-44-1.jpg",
                           caption="‚ú® –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...")
    m = await callback_query.message.edit_media(file)
    await asyncio.sleep(3)
    if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        text, name, send_pronunciation = fn.parse_english_word_of_the_day()
        file = InputMediaPhoto(media="https://i.postimg.cc/T3Hdxc7y/2.png",
                               caption=text)
        await m.edit_media(file, reply_markup=kb.kb_word_of_day)
        if send_pronunciation:
            x = await bot.send_audio(str(callback_query.from_user.id), open(f"{name}.mp3", "rb"),
                                     title="–∞–Ω–≥. –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ (—É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å)")
            asyncio.create_task(delete_message(x, 10))
            os.remove(f"{name}.mp3")
    else:
        text, name = fn.parse_german_word_of_the_day()
        file = InputMediaPhoto(media="https://i.postimg.cc/T3Hdxc7y/2.png",
                               caption=text)
        await m.edit_media(file, reply_markup=kb.kb_word_of_day)
        x = await bot.send_audio(str(callback_query.from_user.id), open(f"{name}.mp3", "rb"),
                                 title="–Ω–µ–º. –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ (—É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å)")
        asyncio.create_task(delete_message(x, 10))
        os.remove(f"{name}.mp3")


async def delete_message(message: types.Message, sleep_time: int = 0):
    await asyncio.sleep(sleep_time)
    with suppress(MessageCantBeDeleted, MessageToDeleteNotFound):
        await message.delete()


# –§–∞–∫—Ç—ã –æ —Å—Ç—Ä–∞–Ω–µ
@dp.callback_query_handler(lambda c: c.data == "facts_about_country" or c.data == "farther")
async def facts_about_country(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        with open("facts/english_facts.txt", "r", encoding="utf-8") as f:
            fact, photo = map(str, choice(f.readlines()).split("*"))
            s = fact.split("\\n")
            fact = s[0].lower() + "\n" + s[1].lower()
            f.close()
    else:
        with open("facts/german_facts.txt", "r", encoding="utf-8") as f:
            fact, photo = map(str, choice(f.readlines()).split("*"))
            f.close()
        fact_de, fact_ru = fact.split("\\n")
        fact = fact_de[0:3] + fact_de[3].lower() + fact_de[4:] + "\n" + fact_ru.lower()

    await edit_media(callback_query, photo, fact, kb.kb_facts_about_country)


# –°–ª–æ–≤–µ—Å–Ω—ã–π –º–∞—Ä–∞—Ñ–æ–Ω
@dp.callback_query_handler(lambda c: c.data == "word_marathon" or c.data == "choose_category")
async def word_marathon(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        await edit_media(callback_query,
                         "https://i.postimg.cc/Y91q9HLv/1x20-The-One-with-the-Evil-Orthodontist-friends-28258398-1280-720.jpg",
                         "üá¨üáß –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", kb.kb_word_marathon)

    else:
        await edit_media(callback_query,
                         "https://i.postimg.cc/Y91q9HLv/1x20-The-One-with-the-Evil-Orthodontist-friends-28258398-1280-720.jpg",
                         "üá©üá™ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", kb.kb_word_marathon)


@dp.callback_query_handler(lambda c: c.data == "all_parts" or c.data == "farther_all")
async def all_parts_of_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    word, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/")
    text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript)
    await edit_media(callback_query, image, text, kb.kb_word_marathon_all)


@dp.callback_query_handler(lambda c: c.data == "nouns" or c.data == "farther_nouns")
async def nouns_parts_of_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        word, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/noun/")
        text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript)
    else:
        word, article, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/noun/",
                                                                                True)
        text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript, article, True)

    await edit_media(callback_query, image, text, kb.kb_word_marathon_nouns)


@dp.callback_query_handler(lambda c: c.data == "verbs" or c.data == "farther_verbs")
async def verbs_parts_of_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    word, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/verb/")
    text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript)
    await edit_media(callback_query, image, text, kb.kb_word_marathon_verbs)


@dp.callback_query_handler(lambda c: c.data == "adjectives" or c.data == "farther_adjectives")
async def adjectives_parts_of_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    word, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/adjective/")
    text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript)
    await edit_media(callback_query, image, text, kb.kb_word_marathon_adjectives)


@dp.callback_query_handler(lambda c: c.data == "adverbs" or c.data == "farther_adverbs")
async def adverbs_parts_of_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    word, translated, transcript, image = fn.process_word_marathon("https://www.kreekly.com/random/adverb/")
    text = parts_of_speech(str(callback_query.from_user.id), word, translated, transcript)
    await edit_media(callback_query, image, text, kb.kb_word_marathon_adverbs)


def parts_of_speech(id, word, translated, transcript, article="", is_german_noun=False):
    if base.language(str(id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        text = f'''
<b>—Å–ª–æ–≤–æ: </b>{word}
<b>–ø–µ—Ä–µ–≤–æ–¥: </b>{translated}
'''
    else:
        if not is_german_noun and base.language(str(id), '', set=False, get=True) == "–Ω–µ–º–µ—Ü–∫–∏–π":
            word = translator.translate(word, src="en", dest="de").text
        else:
            word = f"{article} {word}"
        text = f'''
<b>—Å–ª–æ–≤–æ: </b>{word}
<b>–ø–µ—Ä–µ–≤–æ–¥: </b>{translated}
'''
    if transcript == "[]":
        pass
    else:
        if base.language(str(id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
            text += f"<b>—Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è: </b>{transcript}"
    return text


# –¢–µ—Å—Ç—ã –Ω–∞ –∑–Ω–∞–Ω–∏–µ —è–∑—ã–∫–∞
@dp.callback_query_handler(lambda c: c.data == "language_test")
async def knowledge_test(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    if base.language(callback_query.from_user.id, '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        caption = "üìì —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ <b>—Å—Å—ã–ª–∫–µ:</b>\nüíª https://englishtest.pythonanywhere.com"
    else:
        caption = "üìì —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ <b>—Å—Å—ã–ª–∫–µ:</b>\nüíª https://germantest.pythonanywhere.com"
    await edit_media(callback_query, "https://i.postimg.cc/BvkMv55Y/2023-03-21-203513060.png", caption, kb.kb_test)


# –û–±—É—á–µ–Ω–∏–µ
@dp.callback_query_handler(
    lambda c: c.data == "learning" or c.data == "back_to_learning" or c.data == "button_back_to_learning_ger")
async def learning(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    if base.language(str(callback_query.from_user.id), '', set=False, get=True) == "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π":
        await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                         'üéí –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\n\n‚ö† <b>p.s. –≤ –∫—É—Ä—Å–∞—Ö –≤—ã –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ "I" —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã. —ç—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –ª–∏—à—å –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è —Å—Ç–∏–ª—è –±–æ—Ç–∞. –∑–∞–ø–æ–º–Ω–∏—Ç–µ, "I" –≤—Å–µ–≥–¥–∞ –ø–∏—à–µ—Ç—Å—è —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã.</b>',
                         kb.kb_learning)
    else:
        await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                         'üéí –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:\n\n‚ö† <b>p.s. –≤—Å–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –≤ –Ω–µ–º–µ—Ü–∫–æ–º –ø–∏—à—É—Ç—Å—è —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã.</b>',
                         kb.kb_learning_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ)
@dp.callback_query_handler(lambda c: c.data == 'pronunciation_ger' or c.data == "back_to_courses_ger")
async def pronunciation_ger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     'üé∂ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_pronunciation_ger)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –≥–ª–∞—Å–Ω—ã–µ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã–µ, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'vowels_consonants' or c.data == "farther_vc_1")
async def vowels_consonants(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó <b>–≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã</b>
<b>A</b> [a], <b>O</b> [o], <b>E</b> [—ç], <b>U</b> [—É], <b>I</b> [–∏] —Ç–∞–∫ –∏ —á–∏—Ç–∞—é—Ç—Å—è.
—Ç–∞–∫–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≥–ª–∞—Å–Ω—ã–µ —Å <b>—É–º–ª–∞—É—Ç–æ–º</b> (–¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ —Å–≤–µ—Ä—Ö—É). –æ–Ω–∏ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç—Å—è —Å –±–æ–ª–µ–µ —É–∑–∫–∏–º —Ä—Ç–æ–º, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>schon [—à–æ–Ω] (—É–∂–µ)</i> - <i>sch√∂n [—à—ë–Ω] (–ø—Ä–µ–∫—Ä–∞—Å–Ω–æ)</i>.
<b>A</b> Umlaut —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—ç", –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>M√§dchen [–º—ç–¥—Ö–µ–Ω] - –¥–µ–≤–æ—á–∫–∞.</i>
<b>Y (—ç–ø—Å–∏–ª–æ–Ω)</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—é", –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>Lyrik [–ª—é—Ä–∏–∫] - –ª–∏—Ä–∏–∫–∞</i>
    '''
    await edit_media(callback_query,
                     "https://www.fluentin3months.com/wp-content/uploads/2021/09/german-pronunciation.jpg",
                     text,
                     kb.kb_vowels_consonants)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –≥–ª–∞—Å–Ω—ã–µ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã–µ, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_vc_2")
async def vowels_consonants_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó <b>—Å–æ–≥–ª–∞—Å–Ω—ã–µ –±—É–∫–≤—ã</b>
<b>W</b> [–≤—ç] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–≤": <i>was? [–≤–∞—Å] ‚Äì —á—Ç–æ?</i>.
<b>Z</b> [—Ü—ç—Ç] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—Ü": <i>Ziel [—Ü–∏–ª—å] - —Ü–µ–ª—å</i>.
<b>S</b> [—ç—Å] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—Å": <i>Haus [—Ö–∞—É—Å] ‚Äì –¥–æ–º</i>, –Ω–æ –µ—Å–ª–∏ <b>S</b> –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–µ—Ä–µ–¥ –∏–ª–∏ –º–µ–∂–¥—É –≥–ª–∞—Å–Ω—ã–º–∏, S —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–∑": <i>Sofa [–∑–æ—Ñ–∞] ‚Äì –¥–∏–≤–∞–Ω</i>.
<b>√ü</b> [—ç—Å—Ü—ç—Ç] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –¥–æ–ª–≥–æ–µ "—Å": <i>Stra√üe [—à—Ç—Ä–∞—Å—Å—ç] - —É–ª–∏—Ü–∞</i>.
<b>F</b> [—ç—Ñ], <b>V</b> [—Ñ–∞—É] —á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ "—Ñ": <i>Fuchs [—Ñ—É–∫—Å] - –ª–∏—Å–∞, Volk [—Ñ–æ–ª—å–∫] ‚Äì –Ω–∞—Ä–æ–¥</i>.
<b>J</b> [–π–æ—Ç] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–π": <i>Joghurt [–π–æ–≥—É—Ä—Ç] ‚Äì –π–æ–≥—É—Ä—Ç</i>
<b>L</b> [—ç–ª—å] ‚Äì —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–ª": <i>Lampe [–ª–∞–º–ø—ç] ‚Äì –ª–∞–º–ø–∞</i>.
<b>R</b> [—ç—Ä] —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—Ä", –Ω–æ —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ –≤—ã –∫–∞—Ä—Ç–∞–≤—ã–π, –∞ –Ω–∞ –∫–æ–Ω—Ü–µ —Å–ª–æ–≤–∞ —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –∫–æ—Ä–æ—Ç–∫–æ–µ "–∞": <i>Russland [–†—É—Å—Å–ª–∞–Ω–¥] ‚Äì –†–æ—Å—Å–∏—è, Mutter [–º—É—Ç—Ç–∞] ‚Äì –º–∞–º–∞</i>.
<b>H</b> [—Ö–∞] –≤ –Ω–∞—á–∞–ª–µ —Å–ª–æ–≤–∞ —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –≤—ã–¥–æ—Ö: <i>Haus [—Ö–∞—É—Å] ‚Äì –¥–æ–º</i>, –∞ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ –∏–ª–∏ –∫–æ–Ω—Ü–µ –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è –≤–æ–æ–±—â–µ: <i>gehen [–≥–µ–µ–Ω] ‚Äì –∏–¥—Ç–∏</i>.
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_vowels_consonants_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "combination" or c.data == "farther_comb_1")
async def combination(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò <b>–±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è —Å–æ–≥–ª–∞—Å–Ω—ã—Ö</b>
<b>ch</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—Ö": <i>Loch [–ª–æ—Ö] ‚Äì –¥—ã—Ä–∞,</i>
<b>chs</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–∫—Å": <i>Fuchs [—Ñ—É–∫—Å] ‚Äì –ª–∏—Å–∞,</i>
<b>sch</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—à": <i>Schrank [—à—Ä–∞–Ω–∫] - —à–∫–∞—Ñ,</i>
<b>tsch</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—á": <i>Deutsch [–¥–æ–π—á] - –Ω–µ–º–µ—Ü–∫–∏–π —è–∑—ã–∫,</i>
<b>ck</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ —Ç–≤–µ—Ä–¥–æ–µ "–∫": <i>dr√ºcken [–¥—Ä—é–∫—ç–Ω] ‚Äì –¥–∞–≤–∏—Ç—å,</i>
<b>sp/st</b> –≤ –Ω–∞—á–∞–ª–µ —Å–ª–æ–≤–∞ –∏–ª–∏ –∫–æ—Ä–Ω—è —á–∏—Ç–∞—é—Ç—Å—è –∫–∞–∫ "—à–ø/—à—Ç": <i>spontan [—à–ø–æ–Ω—Ç–∞–Ω] - —Å–ø–æ–Ω—Ç–∞–Ω–Ω—ã–π,</i>
<b>qu</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–∫–≤": <i>Quatsch [–∫–≤–∞—á] - —á–µ–ø—É—Ö–∞,</i>
<b>-tion</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "—Ü–∏–æ–Ω": <i>Station [—à—Ç–∞—Ü–∏–æ–Ω] - —Å—Ç–∞–Ω—Ü–∏—è.</i>
    '''
    await edit_media(callback_query,
                     "https://www.de-online.ru/novosti/2022-1/Pravila_cteniya-urok.jpg",
                     text,
                     kb.kb_combination)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_comb_2")
async def combination(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò <b>–±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è –≥–ª–∞—Å–Ω—ã—Ö</b>
<b>ei</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–∞–π": <i>Weimar [–í–∞–π–º–∞—Ä],</i>
<b>ie</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –¥–æ–ª–≥–æ–µ "–∏": <i>Liebe [–ª–∏–±—ç] ‚Äì –ª—é–±–æ–≤—å,</i>
<b>eu</b> —á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ "–æ–π": <i>heute [—Ö–æ–π—Ç—ç] ‚Äì —Å–µ–≥–æ–¥–Ω—è,</i>
<b>√§u</b> —á–∏—Ç–∞–µ—Ç—Å—è —Ç–∞–∫–∂–µ –∫–∞–∫ "–æ–π": <i>H√§user [—Ö–æ–π–∑—ç—Ä] ‚Äì –¥–æ–ºa.</i>
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_combination_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —É–¥–∞—Ä–µ–Ω–∏–µ, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "accent_ger" or c.data == 'farther_accent_1')
async def accent_ger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô —É–¥–∞—Ä–µ–Ω–∏–µ –ø–æ—á—Ç–∏ –≤—Å–µ–≥–¥–∞ –ø–∞–¥–∞–µ—Ç –Ω–∞ <b>–ø–µ—Ä–≤—ã–π —Å–ª–æ–≥</b>, –∫—Ä–æ–º–µ:
- —Å–ª–æ–≤ —Å –±–µ–∑—É–¥–∞—Ä–Ω—ã–º–∏ –ø—Ä–∏—Å—Ç–∞–≤–∫–∞–º–∏ (be-, ge-, er-, ver-, zer-, ent-, emp-, miss-)
- –∑–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–Ω—ã—Ö —Å–ª–æ–≤ (Comp<b>u</b>ter)
- –¥—Ä—É–≥–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π (war<b>u</b>m)
üìô <b>—Ç–∞–∫–∂–µ –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–ª–µ–¥—É—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞:</b>
- —Å–ø—Ä—è–∂–µ–Ω–∏–µ –∏ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–∞ —É–¥–∞—Ä–µ–Ω–∏–µ –Ω–µ –≤–ª–∏—è—é—Ç
- –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–ª–æ–≤–∞—Ö —É–¥–∞—Ä–µ–Ω–∏–µ –ø–∞–¥–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–µ (Wohnzimmer, Schwimmbad)
- –≤ —Å–ª–æ–≤–∞—Ö –∏–∑ —Ç—Ä–µ—Ö —á–∞—Å—Ç–µ–π —É–¥–∞—Ä–µ–Ω–∏–µ –ø–∞–¥–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤—É—é –∏ –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å —Å–ª–æ–≤–∞
- –≤ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞—Ö —É–¥–∞—Ä–µ–Ω–∏–µ —Å—Ç–∞–≤–∏—Ç—Å—è –Ω–∞ <b>–ø–æ—Å–ª–µ–¥–Ω—é—é</b> –±—É–∫–≤—É (BMW, USA)
- —Å–æ—á–µ—Ç–∞–Ω–∏—è <i>-ei, -ieren, ur-, un-</i> –≤—Å–µ–≥–¥–∞ —É–¥–∞—Ä–Ω—ã–µ
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/XNDZRX7Y/accenrt.jpg",
                     text,
                     kb.kb_accent_ger)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —É–¥–∞—Ä–µ–Ω–∏–µ, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_accent_2')
async def accent_ger_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô <b>—Å–ø–∏—Å–æ–∫ –±–µ–∑—É–¥–∞—Ä–Ω—ã—Ö —Å—É—Ñ—Ñ–∏–∫—Å–æ–≤:</b>
- –¥–ª—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö: <i>-bar, -haft, -ig, -isch, -lich</i>
- –¥–ª—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö <i>-chen, -er, -heit, -keit, -in, -lein, -ling, -nis, -schaft, -tum, -ung</i>
üìô <b>—Å–ø–∏—Å–æ–∫ —É–¥–∞—Ä–Ω—ã—Ö –ø—Ä–∏—Å—Ç–∞–≤–æ–∫:</b>
<i>ab-, an-, auf, aus-, bei-, ein-, empor-, fort-, los-, mit-, nach-, nieder-, weg-, weiter-, wieder-</i>
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_accent_ger_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –¥–æ–ª–≥–∏–µ –∏ –∫—Ä–∞—Ç–∫–∏–µ –≥–ª–∞—Å–Ω—ã–µ)
@dp.callback_query_handler(lambda c: c.data == 'long_short')
async def accent_ger_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï <b>–¥–ª–∏–Ω–Ω—ã–µ</b> –≥–ª–∞—Å–Ω—ã–µ:
- –ø–µ—Ä–µ–¥ h <i>(gehen, stehen, sehen)</i>
- –ø—Ä–∏ –¥–≤–æ–π–Ω—ã—Ö –≥–ª–∞—Å–Ω—ã—Ö <i>(Meer, See, Staat, Boot)</i>
- –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–µ "ie" <i>(fliegen, lieben)</i>
üìï <b>–∫—Ä–∞—Ç–∫–∏–µ</b> –≥–ª–∞—Å–Ω—ã–µ:
- –µ—Å–ª–∏ –ø–æ—Å–ª–µ —Å—Ç–æ—è—Ç –¥–≤–æ–π–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω—ã–µ <i>(schwimmen, vergessen)</i>
- —á–∞—â–µ –≤—Å–µ–≥–æ, –µ—Å–ª–∏ –ø–æ—Å–ª–µ —Å—Ç–æ—è—Ç 2 –∏–ª–∏ –±–æ–ª–µ–µ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö <i>(manchmal, interessant)</i>
    '''
    await edit_media(callback_query,
                     "https://www.brainscape.com/academy/content/images/size/w1340/2020/08/Accents-in-languages.jpg",
                     text, kb.kb_long_short)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –∑–≤—É–∫ R –≤ –Ω–µ–º–µ—Ü–∫–æ–º)
@dp.callback_query_handler(lambda c: c.data == 'r')
async def r(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí <b>–≥–æ—Ä—Ç–∞–Ω–Ω–∞—è R –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è:</b>
- –≤ –Ω–∞—á–∞–ª–µ —Å–ª–æ–≤
- –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –≤ –Ω–∞—á–∞–ª–µ —Å–ª–æ–≤–∞
- –ø–æ—Å–ª–µ –∫—Ä–∞—Ç–∫–∏—Ö –≥–ª–∞—Å–Ω—ã—Ö –∏ –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–π "R"
üìí <b>—Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ R –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è –∫–∞–∫ "–∞":</b>
- –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è —Å R –Ω–∞ –∫–æ–Ω—Ü–µ <i>(mir, ihr, deiner, ihrer)</i>
- –∞—Ä—Ç–∏–∫–ª–∏ <i>(der, einer)</i> –∏ –ø—Ä–µ–¥–ª–æ–≥–∏ <i>(unter, hinter)</i>
- –ø–æ—Å–ª–µ –¥–æ–ª–≥–∏—Ö –≥–ª–∞—Å–Ω—ã—Ö <i>(Ohr, Uhr)</i>
- –≤ –ø—Ä–∏—Å—Ç–∞–≤–∫–∞—Ö <i>er-, her-, ver-, zer-, vor-, √ºber-</i>
    '''
    await edit_media(callback_query,
                     "https://i.ytimg.com/vi/lc5WIxAsJU4/maxresdefault.jpg",
                     text, kb.kb_long_short)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'pronouns' or c.data == "farther_pronouns_1")
async def pronouns(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó –ª–∏—á–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è <b>(Personalpronomen)</b> –∏–∑–º–µ–Ω—è—é—Ç—Å—è –ø–æ –ª–∏—Ü–∞–º, —á–∏—Å–ª–∞–º –∏ –ø–∞–¥–µ–∂–∞–º (–∫—É—Ä—Å –ø–æ –ø–∞–¥–µ–∂–∞–º –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ)
üìó <b>du –∏ ihr</b> —É–ø–æ—Ç—Ä–µ–±–ª—è—é—Ç—Å—è —á–∞—â–µ –≤—Å–µ–≥–æ –¥–ª—è –Ω–µ—Ñ–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –≤–∑—Ä–æ—Å–ª—ã—Ö –∫ –¥–µ—Ç—è–º:
<i>Du wirst heute Abendessen kochen. - –¢—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è —É–∂–∏–Ω. Geht ihr heute mit uns ins Theater? - –í—ã –∏–¥—ë—Ç–µ —Å –Ω–∞–º–∏ –≤ —Ç–µ–∞—Ç—Ä?</i>
üìó –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ <b>Sie</b> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö. —ç—Ç–æ - –≤–µ–∂–ª–∏–≤–∞—è —Ñ–æ—Ä–º–∞.
üìó –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ <b>es</b> —á–∞—Å—Ç–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–≤—è–∑–∏ –∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: <i>Es regnet. - –ò–¥—ë—Ç –¥–æ–∂–¥—å.</i>
üìó <b>—Ç–∞–±–ª–∏—Ü–∞ –ª–∏—á–Ω—ã—Ö –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–π –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/SNwwgcXn/image.png",
                     text, kb.kb_pronouns)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_pronouns_2')
async def pronouns_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è <b>(Possessivpronomen)</b> –≤—ã—Ä–∞–∂–∞—é—Ç –≤–ª–∞–¥–µ–Ω–∏–µ –∏–ª–∏ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å.
üìó –≤—ã–±–æ—Ä –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ª–∏—á–Ω–æ–≥–æ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –∏–ª–∏ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ–Ω–æ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è. –∫–∞–∫–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –±—É–¥–µ—Ç —É –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω–æ–≥–æ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–æ–¥–∞ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ, —Å—Ç–æ—è—â–µ–≥–æ –∑–∞ –Ω–∏–º.
üìó <b>–∞—Ä—Ç–∏–∫–ª—å</b> –º–µ–∂–¥—É –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–º–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è–º–∏ –∏ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º–∏ <b>–Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è</b>, –ø–æ—ç—Ç–æ–º—É —Ñ—Ä–∞–∑–∞: <i>Das ist das mein Kind - –Ω–µ–≤–µ—Ä–Ω–∞.</i>
üìó –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —É–∂–µ —É–ø–æ–º–∏–Ω–∞–ª–æ—Å—å –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ –∏–ª–∏ —Ç–µ–∫—Å—Ç–µ, —Ç–æ –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –µ–≥–æ –≤–ø–æ–ª–Ω–µ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ:
<i>Wem geh√∂ren diese Taschen? - Das sind meine. (–ß—å–∏ —ç—Ç–æ —Å—É–º–∫–∏? - –≠—Ç–æ –º–æ–∏)</i>
<i>Geben Sie mir bitte Ihre Telefonnummer. - Meine? (–î–∞–π—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. - –ú–æ–π?)</i>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/7ZdDDRYX/image.png",
                     text, kb.kb_pronouns_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –≤—Ä–µ–º–µ–Ω–∞ –∏ —Å–ø—Ä—è–∂–µ–Ω–∏–µ –≥–ª–∞–≥–æ–ª–æ–≤)
@dp.callback_query_handler(lambda c: c.data == 'tenses_gerr' or c.data == "back_to_tenses")
async def tenses_ger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     '‚è≤ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–≤—Ä–µ–º–µ–Ω–∞ –∏ —Å–ø—Ä—è–∂–µ–Ω–∏–µ –≥–ª–∞–≥–æ–ª–æ–≤".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_tenses_ger)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è)
@dp.callback_query_handler(lambda c: c.data == 'present')
async def present(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï <b>–Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è (Pr√§sens) –Ω—É–∂–Ω–æ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –º–æ–º–µ–Ω—Ç —Ä–µ—á–∏.</b> —Å–∞–º–æ –¥–µ–π—Å—Ç–≤–∏–µ –º–æ–≥–ª–æ –Ω–∞—á–∞—Ç—å—Å—è –∏ –≤ –ø—Ä–æ—à–ª–æ–º, –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ–±—ã –æ–Ω–æ –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º.
<i>Es ist (heute) sehr hei√ü. - (–°–µ–≥–æ–¥–Ω—è) –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ.</i>
üìï –µ—Å–ª–∏ —Å–∏—Ç—É–∞—Ü–∏—é –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –º–æ–º–µ–Ω—Ç—É, —Ç–æ–∂–µ —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è Pr√§sens:
<i>Neon ist ein Edelgas. - –ù–µ–æ–Ω - –∏–Ω–µ—Ä—Ç–Ω—ã–π –≥–∞–∑.</i>
üìï <b>–∫–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è Pr√§sens?</b>
<i>–ø–æ–¥–ª–µ–∂–∞—â–µ–µ</i> + <b>—Å–º—ã—Å–ª–æ–≤–æ–π –≥–ª–∞–≥–æ–ª –≤ Pr√§sens</b>
üìï <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ich gehe, du gehst, er/es/sie/man geht, wir gehen, ihr geht, sie/Sie gehen</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/tTRL7N8m/present.png", text, kb.kb_present)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'past' or c.data == "farther_past_1")
async def past(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –≤ –Ω–µ–º–µ—Ü–∫–æ–º –µ—Å—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏: <b>Pr√§teritum –∏ Perfekt.</b>
üìò <b>Pr√§teritum</b> –Ω—É–∂–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–µ–µ –≤ –ø—Ä–æ—à–ª–æ–º, –Ω–æ –∑–∞–≤–µ—Ä—à–∏–≤—à–µ–µ—Å—è –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É –º–æ–º–µ–Ω—Ç—É.
<b>Pr√§teritum</b> —Å–∏–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –¥–æ–≤–æ–ª—å–Ω–æ —Å–ª–æ–∂–Ω—ã–π, –∏ –µ–≥–æ –Ω—É–∂–Ω–æ —É—á–∏—Ç—å, –∞ —É —Å–ª–∞–±—ã—Ö –∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –º–µ–∂–¥—É <b>–æ—Å–Ω–æ–≤–æ–π –∏ –ª–∏—á–Ω—ã–º –æ–∫–æ–Ω—á–∞–Ω–∏–µ–º</b> –≤—Å—Ç–∞–µ—Ç <i>t(e)-</i>, –∞ —É–º–ª–∞—É—Ç —É–±–µ–≥–∞–µ—Ç.
üìò <b>–∫–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è Pr√§teritum?</b>
<i>–ø–æ–¥–ª–µ–∂–∞—â–µ–µ</i> + <b>—Å–º—ã—Å–ª–æ–≤–æ–π –≥–ª–∞–≥–æ–ª –≤ Pr√§teritum</b>
üìò <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–∞ –≤ Pr√§teritum –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ich sagte, du sagtest, er/es/sie/man sagte, wir sagten, ihr sagtet, sie/Sie sagten</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/rsKvcGHX/past.png", text, kb.kb_past)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø—Ä–æ—à–µ–¥—à–µ–µ –≤—Ä–µ–º—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_past_2')
async def past_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò <b>Perfekt –Ω—É–∂–µ–Ω –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞ –º–æ–º–µ–Ω—Ç —Ä–µ—á–∏ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å, –Ω–æ –µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–∫—Ç—É–∞–ª–µ–Ω –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ.</b>
—Å–∫–∞–∑—É–µ–º–æ–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞ <b>haben/sein</b> –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –≤—Ä–µ–º–µ–Ω–∏ –∏ —Å–º—ã—Å–ª–æ–≤–æ–≥–æ –≤ <b>Partizip II</b>.
üìò <b>–∫–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è Perfekt?</b>
<i>–ø–æ–¥–ª–µ–∂–∞—â–µ–µ</i> + <b>haben/sein –≤ Pr√§sens</b> + <b>Partizip II —Å–º—ã—Å–ª–æ–≤–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞</b>
üìò —É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —Å–ª–∞–±—ã—Ö –≥–ª–∞–≥–æ–ª–æ–≤ –∫ –æ—Å–Ω–æ–≤–µ –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏—Å—Ç–∞–≤–∫–∞ <i>ge- –∏ -t –Ω–∞ –∫–æ–Ω—Ü–µ</i>, —É —Å–∏–ª—å–Ω—ã—Ö –Ω–∞ –∫–æ–Ω—Ü–µ —Å—Ç–æ–∏—Ç <i>-en</i>.
üìò <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–∞ –≤ Perfekt –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ich habe gemacht, du hast gemacht, er/es/sie/man hat gemacht, wir haben gemacht, ihr habt gemacht, sie/Sie haben gemacht</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/SRhkZMP6/perfect.png", text, kb.kb_past_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –±—É–¥—É—â–µ–µ –≤—Ä–µ–º—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'future' or c.data == "farther_future_1")
async def future(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó <b>Futur I –Ω—É–∂–µ–Ω –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –≤ –±—É–¥—É—â–µ–º, –∏–Ω–æ–≥–¥–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ —Ç–≤–µ—Ä–¥–æ–≥–æ –Ω–∞–º–µ—Ä–µ–Ω–∏—è –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã</b>
üìó <b>–∫–∞–∫ –æ–±—Ä–∞–∑—É–µ—Ç—Å—è Futur I?</b>
<i>–ø–æ–¥–ª–µ–∂–∞—â–µ–µ</i> + <b>werden –≤ Pr√§sens</b> + <b>Partizip II —Å–º—ã—Å–ª–æ–≤–æ–≥–æ –≥–ª–∞–≥–æ–ª–∞</b> + <b>haben –≤ Infinitiv</b>
üìó <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–∞ –≤ Futur I –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ich werde machen, du wirst machen, er/es/sie/man wird machen, wir werden machen, ihr werdet machen, sie/Sie werden machen</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/4x64rZtv/future-1.png", text, kb.kb_future)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –±—É–¥—É—â–µ–µ –≤—Ä–µ–º—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_future_2")
async def future_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó <b>Futur II –Ω—É–∂–µ–Ω, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è –≤ –±—É–¥—É—â–µ–º, —á–∞—Å—Ç–æ –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –º–æ–º–µ–Ω—Ç—É.</b>
üìó <b>Futur II</b> —Å–æ–µ–¥–∏–Ω—è–µ—Ç –≤ —Å–µ–±–µ —Å—Ä–∞–∑—É –¥–≤–∞ –≤—Ä–µ–º–µ–Ω–∏, –ø–æ–ª—É—á–∞–µ—Ç—Å—è Perfekt –≤ Futur
üìó <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ø—Ä—è–∂–µ–Ω–∏—è –≥–ª–∞–≥–æ–ª–∞ –≤ Futur II –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ich werde gemacht haben, du wirst gemacht haben, er/es/sie/man wird gemacht haben, wir werden gemacht haben, ihr werdet gemacht haben, sie/Sie werden gemacht haben</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/ZRx4MLdT/future-2.png", text, kb.kb_future_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π)
@dp.callback_query_handler(lambda c: c.data == 'building_ger' or c.data == "back_to_word_order")
async def building_ger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     'üß± –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_building)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'word_order' or c.data == 'farther_word_order_1')
async def word_order(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –≤ <b>—É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ–º</b> –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π - <b>–ø—Ä—è–º–æ–π</b>. —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–Ω–∞—á–∞–ª–∞ –∏–¥–µ—Ç –ø–æ–¥–ª–µ–∂–∞—â–µ–µ, –∑–∞—Ç–µ–º - —Å–∫–∞–∑—É–µ–º–æ–µ.
<i>Ich suche eine Wohnung. ‚Äì –Ø (–ø–æ–¥–ª–µ–∂–∞—â–µ–µ) –∏—â—É (—Å–∫–∞–∑—É–µ–º–æ–µ) –∫–≤–∞—Ä—Ç–∏—Ä—É.</i>
üìò –Ω–æ –∫–æ–≥–¥–∞ –∑–∞–¥–∞–µ—Ç—Å—è –≤–æ–ø—Ä–æ—Å, –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ <b>–æ–±—Ä–∞—Ç–Ω—ã–π</b>, —Ç.–µ. –ø–æ–¥–ª–µ–∂–∞—â–µ–µ –∏ —Å–∫–∞–∑—É–µ–º–æ–µ –º–µ–Ω—è—é—Ç—Å—è –º–µ—Å—Ç–∞–º–∏.
<i>Was suchst du? ‚Äì –ß—Ç–æ —Ç—ã –∏—â–µ—à—å?</i>
üìò –æ–±—Ä–∞—Ç–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –≤–æ–∑–º–æ–∂–µ–Ω –∏ –≤ <b>–≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö</b> –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
<i>Hat der vielleicht lange Haare! ‚Äì –ù—É –∏ –¥–ª–∏–Ω–Ω—ã–µ –∂–µ —É –Ω–µ–≥–æ –≤–æ–ª–æ—Å—ã!</i>
    '''
    await edit_media(callback_query,
                     "https://www.de-online.ru/novosti/07-2022/poryadok-slov-v-nemetskom-predlozhenii-tablica_tek.jpg",
                     text, kb.kb_word_order)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_word_order_2')
async def word_order_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –≤ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ —Å–Ω–∞—á–∞–ª–∞ –∏–¥–µ—Ç <b>—Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω—ã–º</b>. –∑–∞—Ç–µ–º –∏–¥–µ—Ç –ø–æ–¥–ª–µ–∂–∞—â–µ–µ, –∞ —Å–∫–∞–∑—É–µ–º–æ–µ —É—Ö–æ–¥–∏—Ç –≤ –∫–æ–Ω–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è. –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ —á–ª–µ–Ω—ã –ø–æ–º–µ—â–∞—é—Ç—Å—è –º–µ–∂–¥—É –ø–æ–¥–ª–µ–∂–∞—â–∏–º –∏ —Å–∫–∞–∑—É–µ–º—ã–º.
<i>Ich wei√ü nicht,</i> <b>ob er</b> <i>heute nach Hause</i> <b>kommt</b>. <i>‚Äì –Ø –Ω–µ –∑–Ω–∞—é, –ø—Ä–∏–¥–µ—Ç –ª–∏ –æ–Ω —Å–µ–≥–æ–¥–Ω—è –¥–æ–º–æ–π.</i>
üìò <b>–Ω–æ</b> –µ—Å—Ç—å —Å–ª–æ–≤–∞, –Ω–µ –≤–ª–∏—è—é—â–∏–µ –Ω–∞ –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>und, aber, denn, oder, sondern</i>. <b>–Ω–æ —ç—Ç–æ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏!</b>
üìò –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç —Å—Ç–æ—è—Ç—å –∫–∞–∫ –ø–æ—Å–ª–µ –≥–ª–∞–≤–Ω–æ–≥–æ, —Ç–∞–∫ –∏ –¥–æ –Ω–µ–≥–æ.
<i>–ûb er heute nach Hause kommt, wei√ü ich nicht. ‚Äì –ü—Ä–∏–¥–µ—Ç –ª–∏ –æ–Ω —Å–µ–≥–æ–¥–Ω—è –¥–æ–º–æ–π, —è –Ω–µ –∑–Ω–∞—é.</i>
üìò –µ—Å–ª–∏ –≤ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ <b>—Å–æ—Å—Ç–∞–≤–Ω–∞—è –≥–ª–∞–≥–æ–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞</b>, —Ç–æ –Ω–∞ –∫–æ–Ω–µ—Ü –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –±—É–¥–µ—Ç —É—Ö–æ–¥–∏—Ç—å –µ–µ —Å–ø—Ä—è–≥–∞–µ–º—ã–π —ç–ª–µ–º–µ–Ω—Ç:
<i>Ich glaube, dass er heute sp√§t nach Hause kommen</i> <b>will</b>. <i>‚Äì –Ø –ø–æ–ª–∞–≥–∞—é, —á—Ç–æ –æ–Ω —Å–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥–Ω–æ –¥–æ–º–æ–π –ø—Ä–∏–π—Ç–∏ —Ö–æ—á–µ—Ç.</i>
üìò <b>–∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º</b> –∏–∑ —ç—Ç–æ–≥–æ –ø—Ä–∞–≤–∏–ª–∞ —è–≤–ª—è–µ—Ç—Å—è –¥–≤–æ–π–Ω–æ–π –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤:
<i>Er sagt, dass er heute sp√§t nach Hause</i> <b>hat</b> <i>kommen wollen. ‚Äì –û–Ω –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ —Ö–æ—Ç–µ–ª —Å–µ–≥–æ–¥–Ω—è –ø–æ–∑–¥–Ω–æ –ø—Ä–∏–π—Ç–∏ –¥–æ–º–æ–π.</i>
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_word_order_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–µ —á–ª–µ–Ω—ã)
@dp.callback_query_handler(lambda c: c.data == 'minor_members')
async def minor_members(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó –∑–¥–µ—Å—å –≤—Å–µ –ø—Ä–æ—Å—Ç–æ. –µ—Å–ª–∏ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π —á–ª–µ–Ω, –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –∏–∑–º–µ–Ω–∏—Ç—Å—è –Ω–∞ <b>–æ–±—Ä–∞—Ç–Ω—ã–π</b>.
<i>Ich gehe heute ins Kino. ‚Äì –Ø –∏–¥—É —Å–µ–≥–æ–¥–Ω—è –≤ –∫–∏–Ω–æ.</i>
<i>Heute gehe ich ins Kino. ‚Äì –°–µ–≥–æ–¥–Ω—è –∏–¥—É —è –≤ –∫–∏–Ω–æ.</i>
üìó –≥–ª–∞–≥–æ–ª –≤ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –≤—Å–µ–≥–¥–∞ —Å—Ç–æ–∏—Ç –Ω–∞ –≤—Ç–æ—Ä–æ–π –ø–æ–∑–∏—Ü–∏–∏, –Ω–æ <b>—ç—Ç–æ –Ω–µ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ –≤—Ç–æ—Ä–æ–µ —Å–ª–æ–≤–æ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>Ins Kino gehe ich heute. ‚Äì –í –∫–∏–Ω–æ –∏–¥—É —è —Å–µ–≥–æ–¥–Ω—è.</i>
    '''
    await edit_media(callback_query,
                     "https://www.de-online.ru/novosti/07-2022/poryadok-slov-v-nemetskom-predlozhenii-tablica_tek.jpg",
                     text, kb.kb_minor_members)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –¥–≤–∞ –≥–ª–∞–≥–æ–ª–∞)
@dp.callback_query_handler(lambda c: c.data == 'two_verbs')
async def minor_members(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –µ—Å–ª–∏ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –¥–≤–∞ –≥–ª–∞–≥–æ–ª–∞, —Ç–æ —Å–ø—Ä—è–≥–∞–µ–º—ã–π —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ, –∞ –Ω–µ—Å–ø—Ä—è–≥–∞–µ–º—ã–π - –≤ –∫–æ–Ω—Ü–µ.
<i>Ich</i> <b>will</b> <i>heute ins Kino</i> <b>gehen.</b> <i>‚Äì –Ø —Ö–æ—á—É —Å–µ–≥–æ–¥–Ω—è –ø–æ–π—Ç–∏ –≤ –∫–∏–Ω–æ.</i>
    '''
    await edit_media(callback_query,
                     "https://www.de-online.ru/novosti/07-2022/poryadok-slov-v-nemetskom-predlozhenii-tablica_tek.jpg",
                     text, kb.kb_minor_members)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –≤—Ä–µ–º—è —Å—É—Ç–æ–∫)
@dp.callback_query_handler(lambda c: c.data == 'time')
async def time(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí –µ—Å—Ç—å 2 —Å–ø–æ—Å–æ–±–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫: <b>–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π</b>.
–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫ –≥–æ–≤–æ—Ä—è—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ: <i>—á–∞—Å—ã + Uhr + –º–∏–Ω—É—Ç—ã</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>Es ist sieben Uhr f√ºnfzehn. - 07:15.</i>
–≤ <b>–Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Ä–µ—á–∏</b> –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —Å–ª–æ–≤–∞: <i>morgens (—É—Ç—Ä–∞), mittags (–≤ –æ–±–µ–¥), nachmittags (–¥–Ω—è), abends (–≤–µ—á–µ—Ä–∞), nachts (–Ω–æ—á–∏)</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: <i>Es ist elf Uhr abends. - 23:00.</i>
üìí –¥–ª—è –º–∏–Ω—É—Ç <b>–ø–æ—Å–ª–µ</b> –∫–∞–∫–æ–≥–æ-—Ç–æ —á–∞—Å–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–µ–¥–ª–æ–≥ <b>nach (–ø–æ—Å–ª–µ)</b>, –¥–ª—è –º–∏–Ω—É—Ç –¥–æ –∫–∞–∫–æ–≥–æ-—Ç–æ —á–∞—Å–∞ - <b>vor (–ø–µ—Ä–µ–¥)</b>.
<i>Es ist dreizehn Minuten nach zehn Uhr. - 10:13 - 13 –º–∏–Ω—É—Ç –æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç–æ–≥–æ.</i>
üìí –¥–ª—è 30 –º–∏–Ω—É—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–ª–æ–≤–æ <b>halb (–ø–æ–ª–æ–≤–∏–Ω–∞)</b>. –æ–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–µ–∑ –ø—Ä–µ–¥–ª–æ–≥–∞ –∏ —Å–ª–æ–≤–∞ Uhr.
üìí –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º–∏–Ω—É—Ç –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–æ—Ä–º—É–ª—ã:
<i>–º–∏–Ω—É—Ç—ã –æ—Ç 1 –¥–æ 24 = –º–∏–Ω—É—Ç—ã –æ—Ç 1 –¥–æ 24 + Minuten + nach + –ø—Ä–µ–¥—ã–¥—É—â–∏–π —á–∞—Å</i>
<i>–º–∏–Ω—É—Ç—ã –æ—Ç 36 –¥–æ 59 = –º–∏–Ω—É—Ç—ã –æ—Ç 1 –¥–æ 24 + Minuten + vor + –ø–æ—Å–ª–µ–¥—É—é—â–∏–π —á–∞—Å</i>
üìí –¥–ª—è 15 –º–∏–Ω—É—Ç –µ—Å—Ç—å —Å–≤–æ–µ —Å–ª–æ–≤–æ: <b>Viertel</b>. Viertel nach (—á–µ—Ç–≤–µ—Ä—Ç—å –ø–æ—Å–ª–µ), Viertel vor (—á–µ—Ç–≤–µ—Ä—Ç—å –ø–µ—Ä–µ–¥ –∏–ª–∏ –±–µ–∑ —á–µ—Ç–≤–µ—Ä—Ç–∏)
üìí <b>—Ç–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/JzzJSPpp/image.png",
                     text, kb.kb_articles)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —É—Å–ª–æ–≤–∏—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'if_ger' or c.data == "farther_if_ger_1")
async def if_ger(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìì <b>wenn</b> –æ–∑–Ω–∞—á–∞–µ—Ç <i>–∫–æ–≥–¥–∞/–µ—Å–ª–∏</i> –∏ –≤–≤–æ–¥–∏—Ç –ø—Ä–∏–¥–∞—Ç–æ—á–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:
<i>Wenn du eine neue Wohnung findest, ruf mich an. ‚Äì –ï—Å–ª–∏ (–∫–æ–≥–¥–∞) —Ç—ã –Ω–∞–π–¥–µ—à—å –Ω–æ–≤—É—é –∫–≤–∞—Ä—Ç–∏—Ä—É, –ø–æ–∑–≤–æ–Ω–∏ –º–Ω–µ.</i>
üìì –≤ —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å –∏–º–µ–Ω–Ω–æ <b>–µ—Å–ª–∏</b> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ–≤–æ <b>Falls</b>
üìì –º–æ–∂–Ω–æ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≥–ª–∞–≥–æ–ª—ã –≤ –æ–±–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö –Ω–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ: <i><b>Bezahlen</b> Sie die Rechnung nicht rechtzeitig, <b>werden</b> wir Sie vor Gericht ziehen. ‚Äì –ù–µ –æ–ø–ª–∞—Ç–∏—Ç–µ —Å–≤–æ–µ–≤—Ä–µ–º–µ–Ω–Ω–æ —Å—á–µ—Ç, –º—ã –í–∞—Å –ø—Ä–∏–≤–ª–µ—á–µ–º –∫ —Å—É–¥—É.</i>
üìì —Å–≤—è–∑—å –º–µ–∂–¥—É –ø—Ä–∏–¥–∞—Ç–æ—á–Ω—ã–º –∏ –≥–ª–∞–≤–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏ –º–æ–∂–Ω–æ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç—å —Å–ª–æ–≤–æ–º <i>dann (–∫–æ–≥–¥–∞)</i>:
<i>H√§ttest du auf mich geh√∂rt, (dann) w√§re das nicht passiert. ‚Äì –ü–æ—Å–ª—É—à–∞–ª(—Å—è) –±—ã —Ç—ã –º–µ–Ω—è, (—Ç–æ–≥–¥–∞) —ç—Ç–æ–≥–æ –±—ã –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å.</i>
    '''
    await edit_media(callback_query,
                     "https://www.studying-in-germany.org/wp-content/uploads/2019/02/Best-universities-in-Germany-for-international-students.jpg",
                     text, kb.kb_if_ger)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —É—Å–ª–æ–≤–∏—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_if_ger_2")
async def if_ger_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìì –≤—ã—Ä–∞–∂–µ–Ω–∏–µ <b>angenommen, dass</b> –æ–∑–Ω–∞—á–∞–µ—Ç <b>–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ</b>. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>Angenommen, dass Sie krank werden, so k√∂nnen Sie an dieser Konferenz nicht teilnehmen. ‚Äì –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –í—ã –∑–∞–±–æ–ª–µ–µ—Ç–µ, —Ç–æ–≥–¥–∞ –í—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ —ç—Ç–æ–π –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏.</i>
üìì –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <i>unter der Bedingung, dass (–ø—Ä–∏ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ)</i>
üìì –∫—Ä–æ–º–µ —Ç–æ–≥–æ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ–±–æ—Ä–æ—Ç <b>es sei denn, (dass)</b>: <i>Ich gehe nicht zu ihm, <b>es sei denn, dass</b> er mich um Verzeihung bittet. ‚Äì –Ø –Ω–µ –ø–æ–π–¥—É –∫ –Ω–µ–º—É, –Ω—É —Ä–∞–∑–≤–µ —á—Ç–æ –æ–Ω –ø–æ–ø—Ä–æ—Å–∏—Ç —É –º–µ–Ω—è –ø—Ä–æ—â–µ–Ω–∏—è.</i>
üìì –Ω–µ—Ä–µ–¥–∫–æ —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è <b>sollte (–¥–æ–ª–∂–µ–Ω –±—ã) (—Å –æ—Ç—Ç–µ–Ω–∫–æ–º —Å–º—ã—Å–ª–∞: –µ—Å–ª–∏ –æ–∫–∞–∂–µ—Ç—Å—è, —á—Ç–æ)</b>: <i>Wenn sie anrufen sollte, sagst du, dass ich nicht da bin. ‚Äì –ï—Å–ª–∏ –æ–Ω–∞ –º–Ω–µ –ø–æ–∑–≤–æ–Ω–∏—Ç (–¥–æ—Å–ª–æ–≤–Ω–æ: –¥–æ–ª–∂–Ω–∞ –±—ã –ø–æ–∑–≤–æ–Ω–∏—Ç—å), —Å–∫–∞–∂–µ—à—å –µ–π, —á—Ç–æ –º–µ–Ω—è –Ω–µ—Ç.</i>
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_if_ger_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –∞—Ä—Ç–∏–∫–ª–∏)
@dp.callback_query_handler(lambda c: c.data == 'articles' or c.data == "back_to_learning_ger")
async def articles(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìì —Ä–∞–∑–ª–∏—á–Ω—ã–º —Ä–æ–¥–∞–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞—Ä—Ç–∏–∫–ª–∏. —ç—Ç–æ –æ—Ç—Ä–∞–∂–µ–Ω–æ –≤ <b>—Ç–∞–±–ª–∏—Ü–µ –≤—ã—à–µ.</b>
<i>Gibt es hier in der N√§he eine Bar? ‚Äì –ï—Å—Ç—å –ª–∏ –∑–¥–µ—Å—å –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏ (–æ–¥–∏–Ω) –±–∞—Ä?</i>
–∑–¥–µ—Å—å —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç—Å—è –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å, —Ç–∞–∫ –∫–∞–∫ –≤—ã –Ω–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –∑–∞ –±–∞—Ä –∏ –µ—Å—Ç—å –ª–∏ –æ–Ω –≤–æ–æ–±—â–µ.
üìì –µ—Å–ª–∏ –≤—ã —á—Ç–æ-—Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑—ã–≤–∞–µ—Ç–µ –∏–ª–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç–µ, —Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å <b>–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å.</b>
üìì <b>–µ—Å–ª–∏ –≤—ã –Ω–∞–∑—ã–≤–∞–µ—Ç–µ —Ä–æ–¥ –∑–∞–Ω—è—Ç–∏–π, –ø—Ä–æ—Ñ–µ—Å—Å–∏—é, –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å, —á—É–≤—Å—Ç–≤–∞, –≤–µ—â–µ—Å—Ç–≤–∞, –º–∞—Ç–µ—Ä–∏–∞–ª—ã –ª—É—á—à–µ –≤–æ–æ–±—â–µ –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –∞—Ä—Ç–∏–∫–ª—è.</b>
üìì —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫–ª–µ–º —Å–ª–æ–≤–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–æ <b>–Ω–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–µ—á—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ</b>, –Ω–æ –∏ –µ—Å–ª–∏ –∏–º–µ–µ—Ç –æ–±–æ–±—â–∞—é—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ –µ—Å—Ç—å –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç —Å–æ–≤–æ–∫—É–ø–Ω–æ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≤–µ—â–µ–π (–æ–±—â–µ–µ, –Ω–æ –≤ —Ç–æ –∂–µ –≤—Ä–µ–º—è –¥–µ–ª–∏–º–æ–µ, –ø–æ–¥–¥–∞—é—â–µ–µ—Å—è –∏—Å—á–∏—Å–ª–µ–Ω–∏—é):
<i>Der Mensch ist, was er isst. ‚Äì –ß–µ–ª–æ–≤–µ–∫ –µ—Å—Ç—å —Ç–æ, —á—Ç–æ –æ–Ω –µ—Å—Ç.</i>
üìì –∞—Ä—Ç–∏–∫–ª—è –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å –ø—Ä–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–∏, –≤ —É—Å—Ç–æ–π—á–∏–≤—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö, –ø–æ–≥–æ–≤–æ—Ä–∫–∞—Ö, –≥–∞–∑–µ—Ç–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö, –æ–±—ä—è–≤–ª–µ–Ω–∏—è—Ö –∏ –∫–æ–º–∞–Ω–¥–∞—Ö.
üìì <b>—Ç–∞–±–ª–∏—Ü–∞ –∞—Ä—Ç–∏–∫–ª–µ–π –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/6p86CrS8/articles.png",
                     text, kb.kb_articles)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–∞–¥–µ–∂–∏, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'cases' or c.data == "farther_cases_1")
async def cases(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ <b>(Nominativ)</b> - –ø—Ä—è–º–æ–π –ø–∞–¥–µ–∂, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω—ã –æ—Ç –Ω–µ–≥–æ –∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è –∫–æ—Å–≤–µ–Ω–Ω—ã–º–∏.
- –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è, –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, —Å–ª–æ–≤–æ <i>kein</i> –º—É–∂—Å–∫–æ–≥–æ/—Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ–¥–æ–≤ –Ω–µ –∏–º–µ—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ –∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω–æ–º –ø–∞–¥–µ–∂–µ, –∂–µ–Ω—Å–∫–æ–º —Ä–æ–¥–µ –∏ –º–Ω–æ–∂. —á–∏—Å–ª–µ –ø–æ–ª—É—á–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-e</i>
<i>Eine Frau - –∂–µ–Ω—â–∏–Ω–∞, Ein Mann - –º—É–∂—á–∏–Ω–∞</i>
- –≤ —Å–ª—É—á–∞–µ —Å–ª–∞–±–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–∞–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-e</i>, –∞ –º–Ω–æ–∂. —á–∏—Å–ª–æ - <i>-en</i>.
<i>Der ernste Mann - —Å–µ—Ä—å–µ–∑–Ω—ã–π –º—É–∂—á–∏–Ω–∞, Die guten Freunde - —Ö–æ—Ä–æ—à–∏–µ –¥—Ä—É–∑—å—è</i>
- –ø—Ä–∏ —Å–∏–ª—å–Ω–æ–º —Å–∫–ª–æ–Ω–µ–Ω–∏–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–∞–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Ä–æ–¥—É —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ.
<i>Ernster Mann ‚Äì —Å–µ—Ä—å–µ–∑–Ω—ã–π –º—É–∂—á–∏–Ω–∞</i>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/85Q5bZfy/nominativ.png",
                     text, kb.kb_cases)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–∞–¥–µ–∂–∏, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_cases_2")
async def cases_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï –≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ <b>(Akkusativ)</b>
- –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, –∞—Ä—Ç–∏–∫–ª–∏, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –º—É–∂—Å–∫–æ–≥–æ —Ä–æ–¥–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-en</i>, —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π.
- —Ñ–æ—Ä–º—ã –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞, –∂–µ–Ω—Å–∫–æ–≥–æ/—Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ–¥–æ–≤ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å —Ñ–æ—Ä–º–∞–º–∏ –≤ <i>Nominativ</i>.
üìï –¥–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ <b>(Dativ)</b>
- –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, –∞—Ä—Ç–∏–∫–ª–∏, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –º—É–∂—Å–∫–æ–≥–æ/—Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ–¥–æ–≤ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-m</i> –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∞–º–æ–≥–æ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ.
- –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, –∞—Ä—Ç–∏–∫–ª–∏, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ —Ä–æ–¥–∞ –ø–æ–ª—É—á–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-r</i>
- –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ –∏ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ, –∏ –∑–∞–≤–∏—Å–∏–º–æ–µ –æ—Ç –Ω–µ–≥–æ —Å–ª–æ–≤–æ –ø–æ–ª—É—á–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-(e)n</i>

    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/4xsDJh7F/akkusativ.png",
                     text, kb.kb_cases_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–∞–¥–µ–∂–∏, 3 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == "farther_cases_3")
async def cases_3(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï —Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π –ø–∞–¥–µ–∂ <b>(Genitiv)</b>
- –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∫ –¥—Ä—É–≥–æ–º—É.
- —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º—É–∂—Å–∫–æ–≥–æ/—Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ–¥–æ–≤ —Å–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø–æ–ª—É—á–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-(e)s</i>
- –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –º—É–∂—Å–∫–æ–≥–æ/—Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ–¥–∞ –ø–æ–ª—É—á–∞–µ—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-en</i>
- –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, –∞—Ä—Ç–∏–∫–ª–∏, –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ —Ä–æ–¥–∞ –∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø–æ–ª—É—á–∞—é—Ç –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-r</i>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/cHyjbgSm/genitiv.png",
                     text, kb.kb_cases_3)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –∏–º–µ–Ω–∞ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ)
@dp.callback_query_handler(lambda c: c.data == "counts" or c.data == "back_to_counts")
async def counts(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query, "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     'üßÆ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–∏–º–µ–Ω–∞ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_counts)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ)
@dp.callback_query_handler(lambda c: c.data == "countable")
async def countable(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å: <b>—Å–∫–æ–ª—å–∫–æ? - wie viel?</b>
üìò —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–µ <i>–æ–¥–∏–Ω</i> –º–æ–∂–µ—Ç –∏–º–µ—Ç—å —Ñ–æ—Ä–º—ã eins, einen, eine (–µ—Å–ª–∏ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–º–µ–Ω—è–µ—Ç —Å–æ–±–æ–π —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ):
<i>Wie viele Kinder hast du? - –°–∫–æ–ª—å–∫–æ —É —Ç–µ–±—è –¥–µ—Ç–µ–π? Ich habe eins (=ein Kind) - –£ –º–µ–Ω—è –æ–¥–∏–Ω (=–æ–¥–∏–Ω —Ä–µ–±–µ–Ω–æ–∫)</i>
üìò –µ—Å–ª–∏ –ø–µ—Ä–µ–¥ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–º —Å—Ç–æ–∏—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å, —Ç–æ –æ–Ω–æ —Å–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø–æ <b>—Å–ª–∞–±–æ–º—É</b> —Ç–∏–ø—É:
<i>die eine von Frauen - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–∑ –∂–µ–Ω—â–∏–Ω</i>
üìò —á—Ç–æ–±—ã —Ä–∞–∑–ª–∏—á–∞—Ç—å <b>zwei –∏ drei</b>, –∏–Ω–æ–≥–¥–∞ –≤–º–µ—Å—Ç–æ <b>zwei</b> –≥–æ–≤–æ—Ä—è—Ç <b>zwo</b> (–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ, –∫–∞–∫ –≤–æ–æ–±—â–µ –ø—É—Ç–∞—é—Ç zwei –∏ drei).
üìò —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –ø–∞–¥–µ–∂ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ.
    '''
    await edit_media(callback_query, "https://i.postimg.cc/447fByDK/countable.png", text, kb.kb_countable)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –ø–æ—Ä—è–¥–∫–æ–≤—ã–µ)
@dp.callback_query_handler(lambda c: c.data == "ordinal")
async def ordinal(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –æ—Ç–≤–µ—á–∞—é—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å: <b>–∫–æ—Ç–æ—Ä—ã–π?</b>
üìô –æ–±—ã—á–Ω–æ —É–ø–æ—Ç—Ä–µ–±–ª—è—é—Ç—Å—è —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫–ª–µ–º –∏ —Å–∫–ª–æ–Ω—è—é—Ç—Å—è –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö
<i>Ich bin am neunzehnten Mai geboren - –Ø —Ä–æ–¥–∏–ª—Å—è 19 –º–∞—è.</i>
üìô –µ—Å–ª–∏ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–∞ –ø–∏—Å—å–º–µ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è <b>—Ü–∏—Ñ—Ä–æ–π</b>, —Ç–æ –ø–æ—Å–ª–µ –Ω–µ—ë –±—É–¥–µ—Ç —Å—Ç–æ—è—Ç—å —Ç–æ—á–∫–∞:
<i>am 19. Mai - 19-–≥–æ –º–∞—è, der 20. Juni - 20-–µ –∏—é–Ω—è</i>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/PxVvwqCW/ordinal.png", text, kb.kb_countable)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, –¥—Ä–æ–±–∏)
@dp.callback_query_handler(lambda c: c.data == "fractions")
async def fractions(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï <b>–¥—Ä–æ–±–∏</b> –æ–±—Ä–∞–∑—É—é—Ç—Å—è –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—É—Ñ—Ñ–∏–∫—Å–æ–º <i>-(s)tel</i>
<b>–æ—Ç 2 –¥–æ 19 (-tel): viertel (1/4), 20 –∏ –¥–∞–ª–µ–µ (-stel): zwanzigstel (1/20)</b>
üìï –¥—Ä–æ–±–∏ –ø–∏—à—É—Ç—Å—è —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã –∏ —Å –∞—Ä—Ç–∏–∫–ª–µ–º: <b>das Achtel</b>
üìï 1/2 (halb) –∏–º–µ–µ—Ç –¥–≤–µ —Ñ–æ—Ä–º—ã: —É–ø–æ—Ç—Ä–µ–±–ª—è—é—â–∞—è—Å—è –±–µ–∑ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏ —Å–∫–ª–æ–Ω—è—é—â–∞—è—Å—è –∫–∞–∫ –∏–º—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ:
<i>um half vier - –≤ –ø–æ–ª—á–µ—Ç–≤–µ—Ä—Ç–æ–≥–æ, ein halbes Jahr - –ø–æ–ª–≥–æ–¥–∞</i>
üìï —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å–ª–µ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Ç–æ—è—Ç –≤–æ <b>–º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º</b> —á–∏—Å–ª–µ: <i>anderthalb Seiten ‚Äî –ø–æ–ª—Ç–æ—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã</i>
üìï –¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –¥—Ä–æ–±–∏ –≤—ã—Ä–∞–∂–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ —Å–ª–æ–≤–æ Komma (–∑–∞–ø—è—Ç–∞—è): <i>4,141 ‚Äì vier Komma eins vier eins</i>
üìï <b>—á–∏—Ç–∞–µ—Ç—Å—è —Å–Ω–∞—á–∞–ª–∞ —á–∏—Å–ª–∏—Ç–µ–ª—å, –∑–∞—Ç–µ–º - –∑–Ω–∞–º–µ–Ω–∞—Ç–µ–ª—å.</b>
    '''
    await edit_media(callback_query,
                     "https://res.cloudinary.com/dk-find-out/image/upload/q_80,w_1440,f_auto/whatisafraction_hy3hji.jpg",
                     text, kb.kb_countable)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —Å–∫–ª–æ–Ω–µ–Ω–∏—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'declination' or c.data == "farther_declination_1")
async def declination(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç—Ä–∏ —Ç–∏–ø–∞ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö: <b>—Å–∏–ª—å–Ω–æ–µ, —Å–ª–∞–±–æ–µ, —Å–º–µ—à–∞–Ω–Ω–æ–µ</b>.
–ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Å–∫–ª–æ–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –æ–Ω–∏ —Å—Ç–æ—è—Ç –ø–µ—Ä–µ–¥ –∏–º–µ–Ω–µ–º —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º.
üìí <b>–∫–∞–∫ –ø–æ–Ω—è—Ç—å, –ø–æ –∫–∞–∫–æ–º—É —Ç–∏–ø—É —Å–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ?</b>
- –µ—Å–ª–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –±–µ–∑ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–µ–≥–æ —Å–ª–æ–≤–∞, —Ç–æ –æ–Ω–æ —Å–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø–æ <i>—Å–∏–ª—å–Ω–æ–º—É</i> —Ç–∏–ø—É
- –µ—Å–ª–∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–µ–µ —Å–ª–æ–≤–æ –µ—Å—Ç—å, –Ω–æ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–æ–¥, —á–∏—Å–ª–æ –∏ –ø–∞–¥–µ–∂, –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø–æ <i>—Å–º–µ—à–∞–Ω–Ω–æ–º—É</i> —Ç–∏–ø—É
- –µ—Å–ª–∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–µ–µ —Å–ª–æ–≤–æ –µ—Å—Ç—å –∏ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–æ–¥, —á–∏—Å–ª–æ –∏ –ø–∞–¥–µ–∂, —Ç–æ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω—è–µ—Ç—Å—è –ø–æ <i>—Å–ª–∞–±–æ–º—É</i> —Ç–∏–ø—É
    '''
    await edit_media(callback_query,
                     "https://dammann-german-english-translations.com.au/wp-content/uploads/2016/03/bigstock-Women-and-man-speaking-German-92929733.jpg",
                     text, kb.kb_declination)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —Å–∫–ª–æ–Ω–µ–Ω–∏—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_declination_2')
async def declination_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí <b>—Å–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ</b>
–∏–º—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª—É—á–∞–µ—Ç –ø–∞–¥–µ–∂–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ (–æ–∫–æ–Ω—á–∞–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫–ª—è). –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ Genitiv –≤ –º—É–∂—Å–∫–æ–º –∏ —Å—Ä–µ–¥–Ω–µ–º —Ä–æ–¥–µ (–æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-en</i>)
üìí <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–∏–ª—å–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
üìí –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ —Å–ª–æ–≤–∞ <b>Viele (–º–Ω–æ–≥–æ), Einige (–Ω–µ—Å–∫–æ–ª—å–∫–æ), Wenige (–º–∞–ª–æ)</b> –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç –ø–∞–¥–µ–∂–Ω–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ –æ–∫–æ–Ω—á–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ.
    '''
    await edit_media(callback_query, "https://i.postimg.cc/sxnvXQRR/strong.png", text, kb.kb_declination_2)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —Å–∫–ª–æ–Ω–µ–Ω–∏—è, 3 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_declination_3')
async def declination_3(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí <b>—Å–ª–∞–±–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ</b>
–≤ —Ä–æ–ª–∏ <b>—Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–∏—Ö</b> —Å–ª–æ–≤ –º–æ–≥—É—Ç –≤—ã—Å—Ç—É–ø–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å, —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –∏ —Ç.–¥., —Ç–æ –µ—Å—Ç—å —Ç–µ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –≤ Nominativ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ.
- –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∞—Ä—Ç–∏–∫–ª—è–º –æ—Ç–Ω–æ—Å—è—Ç —Ç–∞–∫–∂–µ —Å–ª–æ–≤–∞ <i>diese, jede, welche, solche, alle</i>.
- –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å, —É–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –∏ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ <b>–Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è</b>.
- –≤ –∫–∞—á–µ—Å—Ç–≤–µ <b>—Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞—é—â–µ–≥–æ</b> —Å–ª–æ–≤–∞ –º–æ–≥—É—Ç –≤—ã—Å—Ç—É–ø–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —á–∞—Å—Ç–∏ —Ä–µ—á–∏, –Ω–æ –≤—Å–µ –æ–Ω–∏ –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ä–æ–¥ –∏ —á–∏—Å–ª–æ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ —É–∂–µ –≤ <i>Nominativ</i>.
üìó <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–ª–∞–±–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/fRhW7fTR/weak.png", text, kb.kb_declination_3)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —Å–∫–ª–æ–Ω–µ–Ω–∏—è, 4 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_declination_4')
async def declination_4(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí <b>—Å–º–µ—à–∞–Ω–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ</b>
–Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Ä—Ç–∏–∫–ª—å (ein/eine), –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ (kein/keine), –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è (mein/meine) –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç <i>—Ä–æ–¥, —á–∏—Å–ª–æ, –ø–∞–¥–µ–∂</i> —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–µ–æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ <i>(ein Tisch - –º–æ–∂–µ—Ç –±—ã—Ç—å –∫–∞–∫ –º—É–∂—Å–∫–æ–π —Ä–æ–¥, —Ç–∞–∫ –∏ —Å—Ä–µ–¥–Ω–∏–π)</i>
üìó <b>—Ç–∞–±–ª–∏—Ü–∞ —Å–º–µ—à–∞–Ω–Ω–æ–≥–æ —Å–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query, "https://i.postimg.cc/D088SrdP/mixed.png", text, kb.kb_declination_4)


# –û–±—É—á–µ–Ω–∏–µ (–Ω–µ–º–µ—Ü–∫–∏–π, —Å–∫–ª–æ–Ω–µ–Ω–∏—è, 5 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_declination_5')
async def declination_5(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí <b>—Å–∫–ª–æ–Ω–µ–Ω–∏–µ –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö</b>
–æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–µ –∏–º–µ–Ω–∞ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–µ, —Å—Ç–æ—è—â–∏–µ –ø–µ—Ä–µ–¥ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º, —Å–∫–ª–æ–Ω—è—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<i>ein klein<b>es</b> neu<b>es</b> Haus / das klein<b>e</b> neu<b>e</b> Haus</i>
üìí <b>—Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–Ω—ã—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö</b>
–∫–æ–≥–¥–∞ –∏–º—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö (—è–≤–ª—è–µ—Ç—Å—è –º–Ω–æ–≥–æ–∫–æ—Ä–µ–Ω–Ω—ã–º –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω—ã–º —Å–ª–æ–≤–æ–º), –æ–∫–æ–Ω—á–∞–Ω–∏–µ —Å—Ç–∞–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ —Å–ª–æ–≤–∞: <i>mathematisch-naturwissenschaftlich<b>es</b> Thema</i>
    '''
    await edit_media(callback_query,
                     "https://dammann-german-english-translations.com.au/wp-content/uploads/2016/03/bigstock-Women-and-man-speaking-German-92929733.jpg",
                     text, kb.kb_declination_5)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ)
@dp.callback_query_handler(lambda c: c.data == 'pronunciation' or c.data == "back_to_courses")
async def learning_pronunciation(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query,
                     "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     'üé∂ –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_pronunciation)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –æ—Ç–∫—Ä—ã—Ç—ã–π –∏ –∑–∞–∫—Ä—ã—Ç—ã–π —Å–ª–æ–≥–∏, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'open_close_syllable' or c.data == "first_page_syllables")
async def open_close_syllable(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìì <b>—á—Ç–æ —Ç–∞–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç—ã–π –∏ –∑–∞–∫—Ä—ã—Ç—ã–π —Å–ª–æ–≥?</b>
‚ö† <b>–æ—Ç–∫—Ä—ã—Ç—ã–π —Å–ª–æ–≥</b> ‚Äì —Å–ª–æ–≥, –æ–∫–∞–Ω—á–∏–≤–∞—é—â–∏–π—Å—è –Ω–∞ –≥–ª–∞—Å–Ω—ã–π –∑–≤—É–∫. –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, –æ–Ω –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –≤ <b>—Å–ª–µ–¥—É—é—â–∏—Ö</b> —Å–ª—É—á–∞—è—Ö:
- —Å–ª–æ–≤–æ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–∞—Å–Ω—É—é –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–ª–æ–≥ –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã–π: ta<b>ke</b> [—Ç—ç–π–∫]
- –∑–∞ –≥–ª–∞—Å–Ω–æ–π –±—É–∫–≤–æ–π —Å–ª–µ–¥—É–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–∞—è, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–π –≤–Ω–æ–≤—å –∏–¥–µ—Ç –≥–ª–∞—Å–Ω—ã–π –∑–≤—É–∫: ed<b>uca</b>tion [—ç–¥—å—é–∫—ç–π—à–Ω]
- –≤ —Å–ª–æ–≤–µ —Å–æ—Å–µ–¥—Å—Ç–≤—É—é—Ç –¥–≤–µ –≥–ª–∞—Å–Ω—ã—Ö: cr<b>ue</b>l [–∫—Ä—É—ç–ª].
–≤ –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Å–ª–æ–≥–∞—Ö –≥–ª–∞—Å–Ω–∞—è –±—É–∫–≤–∞ –ø—Ä–æ–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ –ø–ª–∞–≤–Ω–æ –∏ –ø—Ä–æ—Ç—è–Ω—É—Ç–æ. 
    '''
    await edit_media(callback_query,
                     "https://storage.kun.uz/source/3/8cMEWm-mnI0u4LZb-cDrJ9ibm1vawnm-.jpg",
                     text,
                     kb.kb_open_close_syllables)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –æ—Ç–∫—Ä—ã—Ç—ã–π –∏ –∑–∞–∫—Ä—ã—Ç—ã–π —Å–ª–æ–≥–∏, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_open_close')
async def farther_open_close(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
‚ö† <b>–∑–∞–∫—Ä—ã—Ç—ã–π —Å–ª–æ–≥</b> ‚Äì —Å–ª–æ–≥, –≤ –∫–æ—Ç–æ—Ä–æ–º –≥–ª–∞—Å–Ω—ã–π –∑–≤—É–∫ –∑–∞–º–∫–Ω—É—Ç —Å–æ–≥–ª–∞—Å–Ω—ã–º –∏ –ø–æ—ç—Ç–æ–º—É –∑–≤—É—á–∏—Ç –∫—Ä–∞—Ç–∫–æ –∏ –æ—Ç—Ä—ã–≤–∏—Å—Ç–æ: c<b>ut</b> [–∫–∞—Ç].
–¥–ª—è —Å–ª–æ–≥–æ–≤ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã –æ—Å–æ–±—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —á—Ç–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –≥–ª–∞—Å–Ω—ã–π –∑–≤—É–∫ –∑–∞–º—ã–∫–∞–µ—Ç—Å—è –±—É–∫–≤–æ–π <b>r</b>. –¥–µ–ª–æ –≤ —Ç–æ–º, —á—Ç–æ –≤ –±—Ä–∏—Ç–∞–Ω—Å–∫–æ–º –≤–∞—Ä–∏–∞–Ω—Ç–µ 
–ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è —Ç–∞–∫–∏—Ö —Å–ª–æ–≥–æ–≤ –±—É–∫–≤–∞ <b>r</b> —á–∞—Å—Ç–æ <b>–Ω–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è</b>. –ø–æ—ç—Ç–æ–º—É —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞ —á—Ç–µ–Ω–∏—è –ø–æ–¥–æ–±–Ω—ã—Ö –±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏–π:
- –≤ <b>–æ—Ç–∫—Ä—ã—Ç–æ–º</b> —Å–ª–æ–≥–µ, –∫–æ–≥–¥–∞ <b>r</b> —Å—Ç–æ–∏—Ç –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –≥–ª–∞—Å–Ω—ã—Ö, —á–∏—Ç–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–±–µ –≥–ª–∞—Å–Ω—ã–µ: c<b>are</b> [–∫—ç—ç–∞]
- –≤ <b>–∑–∞–∫—Ä—ã—Ç–æ–º —Å–ª–æ–≥–µ</b> <b>r</b> —Ç–∞–∫–∂–µ –Ω–µ —á–∏—Ç–∞–µ—Ç—Å—è, –Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–≤—É—á–∞–Ω–∏–µ –≥–ª–∞—Å–Ω–æ–≥–æ –∑–≤—É–∫–∞, –¥–µ–ª–∞—è –µ–≥–æ –±–æ–ª–µ–µ –ø—Ä–æ—Ç—è–∂–Ω—ã–º: start [—Å—Ç–∞–∞—Ç]
    '''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_open_close_syllables_2)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±—É–∫–≤ –∏ –∑–≤—É–∫–æ–≤, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'letters_sounds' or c.data == "farther_letters_sounds_1")
async def letters_sounds(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query,
                     "https://i.postimg.cc/02hBMHzp/2023-03-22-200736.png",
                     "üìò –Ω–∞—á–Ω–µ–º —Å —Å–∞–º–æ–≥–æ –ª–µ–≥–∫–æ–≥–æ: —Å —Ç–∞–±–ª–∏—Ü—ã <b>—Å–æ–≥–ª–∞—Å–Ω—ã—Ö</b>, –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä—ã—Ö –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ —Ä—É—Å—Å–∫–æ–º—É –∑–≤—É—á–∞–Ω–∏—é.",
                     kb.kb_letters_sounds)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±—É–∫–≤ –∏ –∑–≤—É–∫–æ–≤, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_letters_sounds_2')
async def letters_sounds_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query,
                     "https://i.postimg.cc/d3GDvxpJ/Opera-2023-03-22-201553-speakenglishwell-ru.png",
                     "üìò —Ç–µ–ø–µ—Ä—å —Ä–∞–∑–±–µ—Ä–µ–º—Å—è —Å –±–æ–ª–µ–µ <b>—Å–ª–æ–∂–Ω—ã–º–∏</b> –±—É–∫–≤–∞–º–∏.",
                     kb.kb_letters_sounds_2)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±—É–∫–≤ –∏ –∑–≤—É–∫–æ–≤, 3 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_letters_sounds_3')
async def letters_sounds_3(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –∏–∑—É—á–∏–º <b>–±—É–∫–≤–æ—Å–æ—á–µ—Ç–∞–Ω–∏—è</b> —Å–æ–≥–ª–∞—Å–Ω—ã—Ö –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ.
<b>–∫—Å—Ç–∞—Ç–∏</b>, —Å–æ–≥–ª–∞—Å–Ω—ã–µ, —Å—Ç–æ—è—â–∏–µ –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ —Å–ª–æ–≤–∞, –Ω–µ–ª—å–∑—è –æ–≥–ª—É—à–∞—Ç—å.
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/qvsYnxVg/2023-03-22-202219052.png",
                     text,
                     kb.kb_letters_sounds_3)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±—É–∫–≤ –∏ –∑–≤—É–∫–æ–≤, 4 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_letters_sounds_4')
async def letters_sounds_4(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –Ω–∞–º–Ω–æ–≥–æ <b>—Å–ª–æ–∂–Ω–µ–µ</b> –æ–±—Å—Ç–æ–∏—Ç —Å–∏—Ç—É–∞—Ü–∏—è —Å –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ–º <b>–≥–ª–∞—Å–Ω—ã—Ö</b>.
–Ω–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –æ —Ç–æ–º, —á—Ç–æ –≤ –∑–∞–∫—Ä—ã—Ç–æ–º —Å–ª–æ–≥–µ –≤—Å–µ –±—É–∫–≤—ã –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç—Å—è <b>–∫—Ä–∞—Ç–∫–æ</b>.
–≤ –æ—Ç–∫—Ä—ã—Ç–æ–º —Å–ª–æ–≥–µ - <b>–ø–ª–∞–≤–Ω–æ –∏ –ø—Ä–æ—Ç—è–∂–Ω–æ</b>.
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/PxyKrSDn/shhhh.jpg",
                     text,
                     kb.kb_letters_sounds_4)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –±—É–∫–≤ –∏ –∑–≤—É–∫–æ–≤, 5 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_letters_sounds_5')
async def letters_sounds_5(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query,
                     "https://i.postimg.cc/1XPG6wpc/dakjfopiq.jpg",
                     "üìò –Ω–µ –∑–∞–±—ã–≤–∞–µ–º, —á—Ç–æ –±—É–∫–≤–∞ <b>r</b> –ø–æ—Å–ª–µ –≥–ª–∞—Å–Ω–æ–≥–æ, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª–æ, <b>–Ω–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è.</b>",
                     kb.kb_letters_sounds_5)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –¥–∏—Ñ—Ç–æ–Ω–≥–∏ –∏ —Ç—Ä–∏—Ñ—Ç–æ–Ω–≥–∏)
@dp.callback_query_handler(lambda c: c.data == 'diphthongs_triphthongs')
async def diphthongs_triphthongs(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
‚ùì <b>–¥–∏—Ñ—Ç–æ–Ω–≥–∏ –∏ —Ç—Ä–∏—Ñ—Ç–æ–Ω–≥–∏</b> - —ç—Ç–æ —Å–æ—á–µ—Ç–∞–Ω–∏—è –¥–≤—É—Ö –∏–ª–∏ —Ç—Ä–µ—Ö –±—É–∫–≤, –æ–±–ª–∞–¥–∞—é—â–∏–µ –æ—Å–æ–±—ã–º –∑–≤—É—á–∞–Ω–∏–µ–º.
—Å–Ω–∞—á–∞–ª–∞ <b>—É—Å–∏–ª–µ–Ω–Ω–æ</b> –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç –≥–ª–∞–≤–Ω—ã–π –∑–≤—É–∫, –∞ –ø–æ—Ç–æ–º –ø–ª–∞–≤–Ω–æ –µ–≥–æ –ø–µ—Ä–µ–≤–æ–¥—è—Ç –≤–æ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω—ã–π –∑–≤—É–∫.
–¥–∏—Ñ—Ç–æ–Ω–≥–∏ –∏ —Ç—Ä–∏—Ñ—Ç–æ–Ω–≥–∏ –Ω–µ –ø–æ–¥—á–∏–Ω—è—é—Ç—Å—è <b>–Ω–∏–∫–∞–∫–∏–º</b> –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–∫–æ–Ω–∞–º, –ø–æ—ç—Ç–æ–º—É –æ—Å—Ç–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ —É—á–∏—Ç—å –∏—Ö –Ω–∞–∏–∑—É—Å—Ç—å.
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/CxqKT1Bb/Opera-2023-03-22-204609-speakenglishwell-ru.png",
                     text,
                     kb.kb_diphthongs_triphthongs)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è. —Ç–æ–Ω—ã)
@dp.callback_query_handler(lambda c: c.data == 'intonation')
async def intonation(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üëΩ <b>–∏–Ω—Ç–æ–Ω–∞—Ü–∏—è</b> —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º —Å—Ä–µ–¥—Å—Ç–≤–æ–º –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å–∫–∞–∑–∞–Ω–Ω–æ–≥–æ. –æ–Ω–∞ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –∑–∞ —Å—á–µ—Ç —Å–æ—á–µ—Ç–∞–Ω–∏—è <b>—Ç–µ–º–ø–∞</b>, <b>—Ñ—Ä–∞–∑–æ–≤–æ–≥–æ —É–¥–∞—Ä–µ–Ω–∏—è</b>, 
<b>–≤—ã—Å–æ—Ç—ã —Ç–æ–Ω–∞</b>, <b>—Ä–∏—Ç–º–∞ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è</b>. —Å—É—â–µ—Å—Ç–≤—É–µ—Ç <b>–¥–≤–∞</b> –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç–∏–ø–∞ –º–µ–ª–æ–¥–∏–∫–∏ (—Ç–æ–Ω–∞):
- <b>–Ω–∏—Å—Ö–æ–¥—è—â–∏–π</b>. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö, —É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö, –ø–µ—Ä–µ–¥–∞–µ—Ç –∑–∞–∫–æ–Ω—á–µ–Ω–Ω—ã–µ –º—ã—Å–ª–∏, —Å—É–∂–¥–µ–Ω–∏—è, —Ñ–∞–∫—Ç—ã. 
—Ç–∞–∫–∂–µ —Å–≤–æ–π—Å—Ç–≤–µ–Ω–µ–Ω –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å–Ω—ã–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º.
üìã <b>–Ω–∞–ø—Ä–∏–º–µ—Ä: we found a cat. ‚Äì –º—ã –Ω–∞—à–ª–∏ –∫–æ—Ç–∞.</b>
- <b>–≤–æ—Å—Ö–æ–¥—è—â–∏–π</b>. –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–µ–∑–∞–∫–æ–Ω—á–µ–Ω–Ω–æ—Å—Ç—å –≤—ã—Å–∫–∞–∑—ã–≤–∞–Ω–∏—è. –æ–Ω —á–∞—Å—Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–∏ –∏ –≤ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö 
–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö. –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è –º–µ–¥–ª–µ–Ω–Ω–æ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è –æ—Ç –ø–µ—Ä–≤–æ–≥–æ —É–¥–∞—Ä–Ω–æ–≥–æ —Å–ª–æ–≥–∞ —Ñ—Ä–∞–∑—ã –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É.
üìã <b>–Ω–∞–ø—Ä–∏–º–µ—Ä: have you swept the floor? - —Ç—ã –ø–æ–¥–º–µ–ª –ø–æ–ª?</b>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/N01JnW6Q/1.jpg",
                     text,
                     kb.kb_intonation)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–ª–æ–∂–Ω–æ—Å—Ç–∏)
@dp.callback_query_handler(lambda c: c.data == 'hard_things')
async def hard_things(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –µ—Å—Ç—å <b>–º–Ω–æ–≥–æ</b> —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–∏—à—É—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ, –Ω–æ –ø—Ä–æ–∏–∑–Ω–æ—Å—è—Ç—Å—è –ø–æ-—Ä–∞–∑–Ω–æ–º—É. –º–Ω–æ–≥–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–π.
üìï <b>–Ω–∞–ø—Ä–∏–º–µ—Ä</b>, —Å–ª–æ–≤–æ <b>read</b> –º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å—Å—è –∫–∞–∫ <b>[—Ä–∏–¥]</b>, —Ç–∞–∫ –∏ <b>[—Ä–µ–¥]</b>. —ç—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤—Ä–µ–º–µ–Ω–∏.
–ø–æ–¥–æ–±–Ω—ã—Ö —Å–ª–æ–≤ –º–Ω–æ–≥–æ. <b>–Ω–∞–ø—Ä–∏–º–µ—Ä: live, reading, wind, use, lead, bow.</b>
üìì –¥–ª—è –∑–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–∞–∫–∏—Ö —Å–ª–æ–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å <b>–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</b>, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ –±—ã –æ–±–∞ —Å–ª–æ–≤–∞ –≤ —Ä–∞–∑–Ω–æ–π 
–∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏. —Ç–æ–≥–¥–∞ –≤ –±—É–¥—É—â–µ–º –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Ö –ø—Ä–∏–º–µ–Ω—è—Ç—å –∏ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—å. 
    '''
    await edit_media(callback_query,
                     "https://att.by/images/news/24341_big.jpg",
                     text,
                     kb.kb_hard)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —É–¥–∞—Ä–µ–Ω–∏—è)
@dp.callback_query_handler(lambda c: c.data == 'accents')
async def accents(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üîñ –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç <b>—Ç—Ä–∏</b> —Ç–∏–ø–∞ —É–¥–∞—Ä–µ–Ω–∏–π:
- <b>—Å–ª–æ–≤–µ—Å–Ω–æ–µ</b>. –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–º –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≥–∞ –≤ —Å–ª–æ–≤–µ. –≤ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –ø–µ—Ä–µ–¥ —É–¥–∞—Ä–Ω—ã–º —Å–ª–æ–≥–æ–º —Å—Ç–∞–≤–∏—Ç—Å—è –∑–Ω–∞–∫ '
üìã <b>–Ω–∞–ø—Ä–∏–º–µ—Ä</b>, present [pri:‚Äòsent] ‚Äì –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—Ç—å, present [‚Äòpreznt] ‚Äì –ø–æ–¥–∞—Ä–æ–∫
- <b>—Ñ—Ä–∞–∑–æ–≤–æ–µ</b>. —Å –µ–≥–æ –ø–æ–º–æ—â—å—é –≤—ã–¥–µ–ª—è—é—Ç—Å—è <b>—á–∞—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</b>.
üìã <b>–Ω–∞–ø—Ä–∏–º–µ—Ä</b>, what ‚Äòhappened? ‚Äì —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ?
- <b>–ª–æ–≥–∏—á–µ—Å–∫–æ–µ</b>. –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è —Å–ª–æ–≤, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—â–∏–π –¥–µ–ª–∞–µ—Ç –∞–∫—Ü–µ–Ω—Ç.
üìã <b>–Ω–∞–ø—Ä–∏–º–µ—Ä</b>, ‚Äòshe did that! ‚Äì –æ–Ω–∞ —ç—Ç–æ —Å–¥–µ–ª–∞–ª–∞!
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/XNDZRX7Y/accenrt.jpg",
                     text,
                     kb.kb_accents)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —á–∏—Å–ª–∞)
@dp.callback_query_handler(lambda c: c.data == 'numbers')
async def numbers(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —á–∏—Å–µ–ª –Ω–∞–º –ø–æ—Ç—Ä–µ–±—É—é—Ç—Å—è –≤—Å–µ–≥–æ –ª–∏—à—å –¥–≤–∞ —Å—É—Ñ—Ñ–∏–∫—Å–∞ <i>-teen –∏ -ty.</i>
üìô —É–¥–∞—Ä–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å –Ω–∞ <i>-teen</i>, –∞ <i>-ty</i> –≤—Å–µ–≥–¥–∞ –±–µ–∑—É–¥–∞—Ä–Ω—ã–π. —Ç–∞–∫ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ —Ä–∞–∑–ª–∏—á–∞—Ç—å —Å—É—Ñ—Ñ–∏–∫—Å—ã.
üìô <b>—Ç–∞–±–ª–∏—Ü–∞ —á–∏—Å–µ–ª –ø–æ–∫–∞–∑–∞–Ω–∞ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/CLtPPpKh/image.png",
                     text,
                     kb.kb_numbers)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –≤—Ä–µ–º–µ–Ω–∞)
@dp.callback_query_handler(lambda c: c.data == 'tenses')
async def learning_tenses(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üéÅ —ç—Ç–æ - —à–ø–∞—Ä–≥–∞–ª–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∞–º. –≤ –∫–∞–∂–¥–æ–π –∫–ª–µ—Ç–∫–µ —É–∫–∞–∑–∞–Ω–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏, 
–º–µ—Ç–æ–¥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –º–∞—Ä–∫–µ—Ä—ã (—Å–ª–æ–≤–∞, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ —Ä–∞–∑–ª–∏—á–∞—Ç—å –≤—Ä–µ–º–µ–Ω–∞).
<b>p.s.</b> –≥–ª–∞–≤–Ω–æ–µ - –ø–æ–º–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ–≤ –≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏:
1. <b>—É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ–µ</b> - –ø–æ–¥–ª–µ–∂–∞—â–µ–µ, —Å–∫–∞–∑—É–µ–º–æ–µ (–≤–æ–∑–º–æ–∂–µ–Ω –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª), –¥—Ä—É–≥–∏–µ —á–ª–µ–Ω—ã –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
2. <b>–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ</b> - –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ, –ø–æ–¥–ª–µ–∂–∞—â–µ–µ (–≤–æ–∑–º–æ–∂–Ω–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º), –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª + not,
–æ—Å–Ω–æ–≤–Ω–æ–π –≥–ª–∞–≥–æ–ª, –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º)
3. <b>–≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ</b> - –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª, –ø–æ–¥–ª–µ–∂–∞—â–µ–µ (–≤–æ–∑–º–æ–∂–Ω–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º), –æ—Å–Ω–æ–≤–Ω–æ–π –≥–ª–∞–≥–æ–ª,
–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º), –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–æ
    '''
    await edit_media(callback_query, "https://i.postimg.cc/gkc7Gb6J/tenses.jpg", text, kb.kb_learning_tenses)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ø—É–Ω–∫—Ç—É–∞—Ü–∏—è)
@dp.callback_query_handler(lambda c: c.data == 'punctuation' or c.data == "back_to_punctuation")
async def punctuation(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await edit_media(callback_query,
                     "https://i.postimg.cc/8PfNJdr8/think.jpg",
                     'üå™Ô∏è –≤—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è: <b>"–ø—É–Ω–∫—Ç—É–∞—Ü–∏—è".</b>\n–≤—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:',
                     kb.kb_punctuation)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∑–∞–ø—è—Ç–∞—è, 1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'comma' or c.data == 'farther_comma_1')
async def comma(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï –∑–∞–ø—è—Ç—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è <b>–ø—Ä–æ—Å—Ç—ã—Ö</b> –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ–º–æ—â–∏ —Å–æ—é–∑–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì the lesson was over, but the students remained in the classroom. - —É—Ä–æ–∫ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –Ω–æ —É—á–∞—â–∏–µ—Å—è –æ—Å—Ç–∞–ª–∏—Å—å –≤ –∫–ª–∞—Å—Å–µ.</b>
üìï –µ—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ <b>–∫–æ—Ä–æ—Ç–∫–æ–µ</b>, –∑–∞–ø—è—Ç–∞—è –ø–µ—Ä–µ–¥ —Å–æ—é–∑–∞–º–∏ <i>and</i> –∏–ª–∏ <i>or</i> –º–æ–∂–µ—Ç –æ–ø—É—Å–∫–∞—Ç—å—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì the rain stopped and it got much warmer. - –¥–æ–∂–¥—å –ø—Ä–µ–∫—Ä–∞—Ç–∏–ª—Å—è, –∏ —Å—Ç–∞–ª–æ –≥–æ—Ä–∞–∑–¥–æ —Ç–µ–ø–ª–µ–µ.</b>
üìï –∑–∞–ø—è—Ç—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ—Å–ª–µ –≤–≤–æ–¥–Ω—ã—Ö —Å–ª–æ–≤, —Ñ—Ä–∞–∑ –∏–ª–∏ –ø—Ä–∏–¥–∞—Ç–æ—á–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥—à–µ—Å—Ç–≤—É—é—Ç –≥–ª–∞–≤–Ω–æ–º—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì while I was talking on the phone, the cat stole my steak. - –ø–æ–∫–∞ —è —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–ª –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É, –∫–æ—Ç —É–∫—Ä–∞–ª –º–æ–π –±–∏—Ñ—à—Ç–µ–∫—Å.</b>
üìï —É—Ç–≤–µ—Ä–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ <i>yes</i>, –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ <i>no</i>, –∞ —Ç–∞–∫–∂–µ –≤–≤–æ–¥–Ω—ã–µ —Å–ª–æ–≤–∞ <i>well, you know, i mean</i> –æ—Ç–¥–µ–ª—è—é—Ç—Å—è –∑–∞–ø—è—Ç—ã–º–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì yes, you can come in - –¥–∞, –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏.</b>
'''
    await edit_media(callback_query,
                     "https://i.pinimg.com/736x/59/94/78/5994789723c2c0ce7197774271e2c912--punctuation-humor-teaching-punctuation.jpg",
                     text,
                     kb.kb_comma)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∑–∞–ø—è—Ç–∞—è, 2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_comma_2')
async def comma(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï –ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω–∞—è <b>–≤–≤–æ–¥–Ω–∞—è —Ñ—Ä–∞–∑–∞</b> –≤—ã–¥–µ–ª—è–µ—Ç—Å—è –∑–∞–ø—è—Ç—ã–º–∏ —Å –¥–≤—É—Ö —Å—Ç–æ—Ä–æ–Ω, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì he and she, my former classmates, got married a week ago. - –æ–Ω –∏ –æ–Ω–∞, –º–æ–∏ –±—ã–≤—à–∏–µ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏, –ø–æ–∂–µ–Ω–∏–ª–∏—Å—å –Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥.</b>
üìï –∑–∞–ø—è—Ç–∞—è <b>–Ω–µ</b> —Å—Ç–∞–≤–∏—Ç—Å—è –≤ —Å–ª–æ–∂–Ω–æ–ø–æ–¥—á–∏–Ω–µ–Ω–Ω–æ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–∏ –ø–µ—Ä–µ–¥ —Å–æ—é–∑–æ–º <i>that</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì he said that he was going to quit. - –æ–Ω —Å–∫–∞–∑–∞–ª, —á—Ç–æ —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è —É–≤–æ–ª—å–Ω—è—Ç—å—Å—è.</b>
üìï –ø—Ä–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–∏ –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã—Ö —á–ª–µ–Ω–æ–≤ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—è—Ç–∞—è —Å—Ç–∞–≤–∏—Ç—Å—è —Ç–∞–∫–∂–µ –∏ –ø–µ—Ä–µ–¥ —Å–æ—é–∑–æ–º <i>and</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì at the supermarket i bought sugar, tea, coffee, and matches - –≤ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–µ —è –∫—É–ø–∏–ª —Å–∞—Ö–∞—Ä, —á–∞–π, –∫–æ—Ñ–µ –∏ —Å–ø–∏—á–∫–∏.</b>
üìï –∑–∞–ø—è—Ç—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è <b>–ø—Ä—è–º–æ–π</b> —Ä–µ—á–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì he said indifferently, ‚Äúi don‚Äôt mind.‚Äù - –æ–Ω —Å–∫–∞–∑–∞–ª –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–æ: ¬´—è –Ω–µ –≤–æ–∑—Ä–∞–∂–∞—é¬ª</b>
üìï –∑–∞–ø—è—Ç—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è <b>–≤—Å–µ—Ö</b> –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π, –¥–∞—Ç, (–∫—Ä–æ–º–µ –º–µ—Å—è—Ü–∞ –∏ –¥–Ω—è), –∞–¥—Ä–µ—Å–æ–≤ (–∫—Ä–æ–º–µ –Ω–æ–º–µ—Ä–∞ —É–ª–∏—Ü—ã –∏ –Ω–∞–∑–≤–∞–Ω–∏—è), –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì december 15, 2009, was an important day in his life. - 15 –¥–µ–∫–∞–±—Ä—è 2009 –≥–æ–¥–∞ –±—ã–ª –≤–∞–∂–Ω—ã–π –¥–µ–Ω—å –≤ –µ–≥–æ –∂–∏–∑–Ω–∏.</b>
'''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_comma_2)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Ç–æ—á–∫–∞)
@dp.callback_query_handler(lambda c: c.data == 'period')
async def period(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ –∑–Ω–∞–∫–∞ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è ‚Äî <b>–∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ.</b>
üìò —Å–ª–µ–¥—É–µ—Ç —Å—Ç–∞–≤–∏—Ç—å —Ç–æ—á–∫—É –≤ –∫–æ–Ω—Ü–µ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—ã, –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω—è—è –±—É–∫–≤–∞ —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è <b>–Ω–µ</b> —è–≤–ª—è–µ—Ç—Å—è
–ø–æ—Å–ª–µ–¥–Ω–µ–π –±—É–∫–≤–æ–π —Å–ª–æ–≤–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: <b>gen. secretary ‚Äî general secretary</b>.
üìò –µ—Å–ª–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–∞—è —Ñ—Ä–∞–∑–∞ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏—Ç—Å—è, –º—ã –Ω–µ —Å—Ç–∞–≤–∏–º —Ç–æ—á–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: <b>NASA, –∞ –Ω–µ N.A.S.A.</b>
'''
    await edit_media(callback_query,
                     "https://i.postimg.cc/Hk2z7vdY/fullstophoriz-noart.jpg", text, kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∫–∞–≤—ã—á–∫–∏)
@dp.callback_query_handler(lambda c: c.data == 'quote_marks')
async def quote_marks(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó –∫–∞–≤—ã—á–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è <b>–ø—Ä—è–º–æ–π —Ä–µ—á–∏</b>.
üìó –∫–∞–≤—ã—á–∫–∏ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è <b>—Å–∞—Ä–∫–∞–∑–º–∞</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì your so called ‚Äúfriend‚Äù should have given you a lift home. - —Ç–≤–æ–π —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã–π ¬´–¥—Ä—É–≥¬ª –¥–æ–ª–∂–µ–Ω –±—ã–ª –±—ã –ø–æ–¥–≤–µ–∑—Ç–∏ —Ç–µ–±—è –¥–æ–º–æ–π.</b>
üìó –∫–∞–≤—ã—á–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è <b>—Ü–∏—Ç–∞—Ç—ã</b>
'''
    await edit_media(callback_query,
                     "https://i.postimg.cc/vHPzGYwQ/11345a4cf6343afabfb2efca21056acf.png", text, kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∏ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫–∏)
@dp.callback_query_handler(lambda c: c.data == 'marks')
async def marks(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ —Å—Ç–∞–≤–∏—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ <b>–≤–æ–ø—Ä–æ—Å</b>.
üìô –æ–¥–Ω–∞–∫–æ –≤ <b>–∫–æ—Å–≤–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö</b> –æ–Ω –Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì he asked how many people would go on an excursion - –æ–Ω —Å–ø—Ä–æ—Å–∏–ª, —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –ø–æ–µ–¥—É—Ç –Ω–∞ —ç–∫—Å–∫—É—Ä—Å–∏—é.</b>
üìô —Ç–∞–∫–∂–µ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ –Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è, –µ—Å–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ —Å–ª–æ–≤ <b>i wonder, he doesn't know, i don't remember</b>.
üìì –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è <b>—Ç–æ–ª—å–∫–æ</b> –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã, –ø—Ä–∏–∫–∞–∑–∞, —ç–º–æ—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì stop talking! - –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç–µ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å!</b>
<b>‚Äì what a beautiful place! - –∫–∞–∫–æ–µ –∂–∏–≤–æ–ø–∏—Å–Ω–æ–µ –º–µ—Å—Ç–æ!</b>
'''
    await edit_media(callback_query,
                     "https://i.postimg.cc/LXDt7nQz/png-transparent-exclamation-point-and-question-mark-illustrations-exclamation-mark-question-mark-emo.png",
                     text,
                     kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –¥–≤–æ–µ—Ç–æ—á–∏–µ –∏ —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π)
@dp.callback_query_handler(lambda c: c.data == 'colons')
async def colons(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìì –¥–≤–æ–µ—Ç–æ—á–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–≤–µ–¥–µ–Ω–∏—è <b>–ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è, —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì music is more than something mechanical: it is an expression of deep feeling and ethical values. - –º—É–∑—ã–∫–∞ ‚Äì —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ –∑–≤—É–∫–∏: —ç—Ç–æ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≥–ª—É–±–æ–∫–æ–≥–æ —á—É–≤—Å—Ç–≤–∞ –∏ –Ω—Ä–∞–≤—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ü–µ–Ω–Ω–æ—Å—Ç–µ–π.</b>
üìì —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–≤—è–∑–∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π, <b>–Ω–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–Ω—ã—Ö —Å–æ—é–∑–æ–º</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì the sky is covered with heavy clouds; it is going to rain soon. - –Ω–µ–±–æ –ø–æ–∫—Ä—ã—Ç–æ —Ç—è–∂–µ–ª—ã–º–∏ —Ç—É—á–∞–º–∏, —Å–∫–æ—Ä–æ –ø–æ–π–¥–µ—Ç –¥–æ–∂–¥—å.</b>
üìì —Ç–æ—á–∫–∞ —Å –∑–∞–ø—è—Ç–æ–π —Ç–∞–∫–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —á—Ç–æ–±—ã —Å–æ–µ–¥–∏–Ω–∏—Ç—å —á–∞—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —É–∂–µ <b>–µ—Å—Ç—å</b> –∑–∞–ø—è—Ç—ã–µ.
'''
    await edit_media(callback_query,
                     "https://media.proprofs.com/images/discuss/user_images/153336/88413107944.jpg", text, kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–∫–æ–±–∫–∏)
@dp.callback_query_handler(lambda c: c.data == 'parentheses')
async def parentheses(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üéí —Å–∫–æ–±–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è <b>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ</b> –º–∞—Ç–µ—Ä–∏–∞–ª–∞, –≤–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–∞–∫ –≤–≤–æ–¥–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì he was appointed a head of the department (some people say, this is because he was a brother of the minister) - –µ–≥–æ –Ω–∞–∑–Ω–∞—á–∏–ª–∏ –Ω–∞—á–∞–ª—å–Ω–∏–∫–æ–º –æ—Ç–¥–µ–ª–∞ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—Ç, —á—Ç–æ —ç—Ç–æ –∏–∑-–∑–∞ —Ç–æ–≥–æ, —á—Ç–æ –æ–Ω –±—ã–ª –±—Ä–∞—Ç–æ–º –º–∏–Ω–∏—Å—Ç—Ä–∞)</b>
'''
    await edit_media(callback_query,
                     "https://bravelittlenib.files.wordpress.com/2015/04/parentheses.jpg", text, kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Ç–∏—Ä–µ –∏–ª–∏ –¥–µ—Ñ–∏—Å)
@dp.callback_query_handler(lambda c: c.data == 'dash_hyphen')
async def dash_hyphen(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò —Ç–∏—Ä–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —á—Ç–æ–±—ã –≤—ã–¥–µ–ª–∏—Ç—å <b>—Å—É—Ç—å</b> –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ <b>–ø–æ—è—Å–Ω–∏—Ç–µ–ª—å–Ω—ã–π</b> –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì to some of you, my proposals may seem radical - even revolutionary. - –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∏–∑ –≤–∞—Å –º–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–≥—É—Ç –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Ä–∞–¥–∏–∫–∞–ª—å–Ω—ã–º–∏ - –¥–∞–∂–µ —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω—ã–º–∏.</b>
‚ö† <i>p.s. –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∏—Ä–µ —Å–ª–∏—à–∫–æ–º —á–∞—Å—Ç–æ, –∏–Ω–∞—á–µ –æ–Ω–æ –ø–æ—Ç–µ—Ä—è–µ—Ç —Å–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.</i>
üìò –¥–µ—Ñ–∏—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ <b>—Å–ª–æ–∂–Ω—ã—Ö</b> —Å–ª–æ–≤–∞—Ö –∏–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞–º–∏ <i>ex-, self-, all-, non-</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì ex-wife, self-esteemed, T-shirt, all-inclusive</b>
'''
    await edit_media(callback_query, "https://i.postimg.cc/8Cr8Gf2g/hd.jpg", text, kb.kb_period)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 1)
@dp.callback_query_handler(lambda c: c.data == 'apostrophe' or c.data == 'farther_apostrophy_1')
async def apostrophe(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìô –∞–ø–æ—Å—Ç—Ä–æ—Ñ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ <b>—Å–æ–∫—Ä–∞—â–µ–Ω–Ω—É—é</b> –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫—É—é —Ñ–æ—Ä–º—É, –Ω–æ –∑–∞–º–µ–Ω–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–π –±—É–∫–≤—ã <b>–Ω–µ</b> –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è –≤ —Ñ–æ—Ä–º–∞–ª—å–Ω–æ–π –∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ–π —Ä–µ—á–∏, —Ç–∞–∫ –∫–∞–∫ —Ç–∞–º –≤—Å–µ —Å–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã <b>–ø–æ–ª–Ω–æ—Å—Ç—å—é</b>. –≤—ã—à–µ –ø–æ–∫–∞–∑–∞–Ω –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ—á–µ–Ω—å –≤—Å–µ—Ö —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º.
'''
    await edit_media(callback_query, "https://englsecrets.ru/wp-content/uploads/2014/05/apostrophe1.jpg", text,
                     kb.kb_apostrophe)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –∞–ø–æ—Å—Ç—Ä–æ—Ñ, —Å—Ç—Ä–∞–Ω–∏—Ü–∞ 2)
@dp.callback_query_handler(lambda c: c.data == 'farther_apostrophy_2')
async def apostrophe_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìí –∞–ø–æ—Å—Ç—Ä–æ—Ñ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏—Ç—è–∂–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞–¥–µ–∂–∞ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>my mom's bag - —Å—É–º–∫–∞ –º–æ–µ–π –º–∞–º—ã</b>
üìí –∞–ø–æ—Å—Ç—Ä–æ—Ñ –Ω—É–∂–Ω–æ —Å—Ç–∞–≤–∏—Ç—å <b>–¥–æ –±—É–∫–≤—ã s</b> –¥–ª—è —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ <i>(the student‚Äôs work - —Ä–∞–±–æ—Ç–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞)</i> –∏ <b>–ø–æ—Å–ª–µ –±—É–∫–≤—ã s</b>, –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —Å—Ç–æ–∏—Ç –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ <i>(my friends' house)</i>
üìí —Ç–∞–∫–∂–µ –∞–ø–æ—Å—Ç—Ä–æ—Ñ—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ –≤—ã—Ä–∞–∂–µ–Ω–∏—è—Ö, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö <b>–≤—Ä–µ–º—è</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>10 o'clock, two week's notice</b>
'''
    await edit_media(callback_query, "https://langtown.ru/wp-content/uploads/2021/07/Apostrophe.jpg", text,
                     kb.kb_apostrophe_2)


# –û–±—É—á–µ–Ω–∏–µ (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π, —Å–ª–æ–≤–∞—Ä—å)
@dp.callback_query_handler(lambda c: c.data == 'vocabulary')
async def apostrophe_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = 'üìö —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å –ª—É—á—à–µ –≤—Å–µ–≥–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ: <b>—Å–º–æ—Ç—Ä–∏—Ç–µ —Ñ–∏–ª—å–º—ã, —á–∏—Ç–∞–π—Ç–µ –∫–Ω–∏–≥–∏, –∏–≥—Ä–∞–π—Ç–µ –≤ –∏–≥—Ä—ã,</b> –¥–µ–ª–∞–π—Ç–µ –≤—Å–µ, —á—Ç–æ –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è. <i>–Ω–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.</i> —É—á–∏—Ç–µ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å—Å—è. –∞ –±–æ—Ç –≤–∞–º –≤ —ç—Ç–æ–º –ø–æ–º–æ–∂–µ—Ç: <b>"–º–∞—Ä–∞—Ñ–æ–Ω —Å–ª–æ–≤"</b> –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–ª–æ–≤. <b>—É–¥–∞—á–∏!</b> ‚≠ê'
    await edit_media(callback_query,
                     "https://razoom.mgutm.ru/pluginfile.php/24976/course/overviewfiles/–ó–∞–±–ª—É–∂–¥–µ–Ω–∏—è-—Å–≤—è–∑–∞–Ω–Ω—ã–µ-—Å-–∞–Ω–≥–ª–∏–π—Å–∫–∏–º-—è–∑—ã–∫–æ–º.-–ß–∞—Å—Ç—å-1.jpg",
                     text,
                     kb.kb_vocabulary)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –£—Å–ª–æ–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
@dp.callback_query_handler(lambda c: c.data == 'if')
async def if_(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
‚Äº —É—Å–ª–æ–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è—Ç –∏–∑ –¥–≤—É—Ö —á–∞—Å—Ç–µ–π: <b>—Å–∞–º–æ–≥–æ —É—Å–ª–æ–≤–∏—è</b> –∏ <b>—Å–ª–µ–¥—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ —É—Å–ª–æ–≤–∏—è.</b> —á–∞—Å—Ç–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –º–æ–≥—É—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤ –ª—é–±–æ–º –ø–æ—Ä—è–¥–∫–µ, –Ω–æ –µ—Å–ª–∏ —Å–Ω–∞—á–∞–ª–∞ –∏–¥–µ—Ç —É—Å–ª–æ–≤–∏–µ, —Ç–æ –Ω—É–∂–Ω–∞ <b>–∑–∞–ø—è—Ç–∞—è</b>. –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ - –Ω–µ –Ω—É–∂–Ω–∞.
‚úÖ –≤—ã—à–µ –ø–æ–∫–∞–∑–∞–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º <b>–≤—Å–µ—Ö</b> —Ç–∏–ø–æ–≤ —É—Å–ª–æ–≤–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π.
    '''
    await edit_media(callback_query,
                     "https://i.postimg.cc/44jMpyky/if-clauses.jpg", text, kb.kb_learning_tenses)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –°—Ç–µ–ø–µ–Ω–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (1 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'degrees' or c.data == 'farther_degrees_1')
async def degrees(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò <b>–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å</b> - —ç—Ç–æ –∏–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Ñ–æ—Ä–º–∞ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –Ω–∞–ø—Ä–∏–º–µ—Ä: old, big, small, good
üìò <b>—Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å</b> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤/–ª—é–¥–µ–π –º–µ–∂–¥—É —Å–æ–±–æ–π.
–¥–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é –æ–∫–æ–Ω—á–∞–Ω–∏—è <i>-er</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: small - smaller
–µ—Å–ª–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ <i>-y</i>, –Ω—É–∂–Ω–æ <b>–∑–∞–º–µ–Ω–∏—Ç—å</b> <i>-y</i> –Ω–∞ <i>-i</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: happy - happier, easy - easier
–µ—Å–ª–∏ <b>–æ–¥–Ω–æ—Å–ª–æ–∂–Ω–æ–µ</b> –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –≥–ª–∞—Å–Ω–æ–π –∏ —Å–æ–≥–ª–∞—Å–Ω–æ–π, —Ç–æ –∫–æ–Ω–µ—á–Ω–∞—è —Å–æ–≥–ª–∞—Å–Ω–∞—è <b>—É–¥–≤–∞–∏–≤–∞–µ—Ç—Å—è</b>, –Ω–∞–ø—Ä–∏–º–µ—Ä: hot - hotter
–µ—Å–ª–∏ –≤ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–º –±–æ–ª—å—à–µ –¥–≤—É—Ö —Å–ª–æ–≥–æ–≤, —Ç–æ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–æ <i>more</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: serious - more serious, famous - more famous
üìò <b>–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–∞—è —Å—Ç–µ–ø–µ–Ω—å</b> –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç, —á—Ç–æ –Ω–∞—à –ø—Ä–µ–¥–º–µ—Ç —Å–∞–º—ã–π-—Å–∞–º—ã–π.
–∫ –∫–æ—Ä–æ—Ç–∫–∏–º –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º <b>–¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è</b> –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-est</i> –∏ <i>the</i> –≤ –Ω–∞—á–∞–ª–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: weak - the weakest
–µ—Å–ª–∏ –≤ –∫–æ–Ω—Ü–µ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ç–æ–∏—Ç <i>-y</i>, —Å–∏—Ç—É–∞—Ü–∏—è —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫–∞—è –∂–µ, –∫–∞–∫ –≤ —Å—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä: happy - the happiest.
–≤ –¥–ª–∏–Ω–Ω—ã—Ö –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è <i>the most</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä: useful - the most useful.
    '''
    await edit_media(callback_query,
                     "https://weemss.com/wp-content/uploads/2017/11/fruit-1160552_1920.jpg", text, kb.kb_degrees)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –°—Ç–µ–ø–µ–Ω–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (2 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_degrees_2')
async def degrees_2(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò <b>–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ</b> —Å—Ç—Ä–æ–∏—Ç—Å—è –Ω–∞ —Å–ª–æ–≤–∞—Ö <i>less, not as, not so</i>.
—Å–ª–æ–≤–æ <i>less</i> –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å –∫–æ—Ä–æ—Ç–∫–∏–º–∏ –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã–º–∏; –≤ —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ —É–º–µ—Å—Ç–Ω–µ–µ <i>not as... as...</i>, –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì the second method was less complicated than the first one. - –≤—Ç–æ—Ä–æ–π –º–µ—Ç–æ–¥ –±—ã–ª –º–µ–Ω–µ–µ —Å–ª–æ–∂–Ω—ã–π, —á–µ–º –ø–µ—Ä–≤—ã–π</b>
<b>‚Äì my old smartphone was not as fast as my new one. - –º–æ–π —Å—Ç–∞—Ä—ã–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω –Ω–µ –±—ã–ª —Ç–∞–∫–∏–º –±—ã—Å—Ç—Ä—ã–º, –∫–∞–∫ –Ω–æ–≤—ã–π.</b>
'''
    await callback_query.message.edit_caption(caption=text, reply_markup=kb.kb_degrees_2)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –°—Ç–µ–ø–µ–Ω–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è (3 —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
@dp.callback_query_handler(lambda c: c.data == 'farther_degrees_3')
async def degrees(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìò –∫ <b>–∏—Å–∫–ª—é—á–µ–Ω–∏—è–º</b> –Ω–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø—Ä–∏–ª–∞–≥–∞—Ç–µ–ª—å–Ω—ã—Ö, –Ω–æ –∏—Ö <b>–Ω–µ—Ç—Ä—É–¥–Ω–æ</b> –∑–∞–ø–æ–º–Ω–∏—Ç—å.
    '''
    await edit_media(callback_query,
                     "https://crownenglishclub.ru/wp-content/uploads/2019/05/Isklyucheniya_v_stepeni_sravneniya_prilagatelnyh_v_angliyskom_yazyke__pravila__tablicy_3.jpg",
                     text, kb.kb_degrees_3)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ò—Å—á–∏—Å–ª—è–µ–º—ã–µ/–Ω–µ–∏—Å—á–∏—Å–ª—è–µ–º—ã–µ
@dp.callback_query_handler(lambda c: c.data == 'uncount')
async def uncount(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï –Ω–µ—Ç—Ä—É–¥–Ω–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, —á—Ç–æ –∏—Å—á–∏—Å–ª—è–µ–º—ã–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –º–æ–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å, –∞ –Ω–µ–∏—Å—á–∏—Å–ª—è–µ–º—ã–µ - –Ω–µ–ª—å–∑—è.
–∫ –∫–ª–∞—Å—Å—É <b>–∏—Å—á–∏—Å–ª—è–µ–º—ã—Ö</b> —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–Ω–æ—Å—è—Ç—Å—è –±—ã—Ç–æ–≤—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –ª—é–¥–∏ –∏ —Ç.–¥. –≤–æ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–º —á–∏—Å–ª–µ –∫ –Ω–∏–º –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç—Å—è –æ–∫–æ–Ω—á–∞–Ω–∏–µ <i>-s</i>
–∫ <b>–Ω–µ–∏—Å—á–∏—Å–ª—è–µ–º—ã–º</b> –æ—Ç–Ω–æ—Å—è—Ç—Å—è: –æ—â—É—â–µ–Ω–∏—è (hate, fear), –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ (space, time), –ø–æ–≥–æ–¥–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è (weather, cold), –º–∞—Ç–µ—Ä–∏–∞–ª—ã (wood, water, salt)
<i>–≥–ª–∞–≥–æ–ª to be –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–æ—Ä–º—É "is"</i>
üìï —Å–ª–æ–≤–∞ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –∏–∑ –æ–¥–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞ –≤ –¥—Ä—É–≥–æ–π. –Ω–∞–ø—Ä–∏–º–µ—Ä: <b>bottle - –±—É—Ç—ã–ª–∫–∞, a bottle of water - –±—É—Ç—ã–ª–∫–∞ –≤–æ–¥—ã.</b>
üìï –∫–∞–∫ –≤—ã–±–∏—Ä–∞—Ç—å –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞? –≤ –æ–±—â–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–≤–µ –≤–∞—Ä–∏–∞—Ü–∏–∏: <b>–º–Ω–æ–≥–æ –∏ –º–∞–ª–æ</b>. –¥–ª—è <b>–∏—Å—á–∏—Å–ª—è–µ–º—ã—Ö</b> "–º–Ω–æ–≥–æ" - —ç—Ç–æ <i>many</i>, –∞ –¥–ª—è –Ω–µ–∏—Å—á–∏—Å–ª—è–µ–º—ã—Ö - <i>much</i>. –∞ "–º–∞–ª–æ" –¥–ª—è <b>–∏—Å—á–∏—Å–ª—è–µ–º—ã—Ö</b> - —ç—Ç–æ <i>few</i>, –¥–ª—è –Ω–µ–∏—Å—á–∏—Å–ª—è–µ–º—ã—Ö - —ç—Ç–æ <i>little</i>.
üìï –ø—Ä–∏–º–µ—Ä—ã: <b>many years (–º–Ω–æ–≥–æ –ª–µ—Ç), much love (–º–Ω–æ–≥–æ –ª—é–±–≤–∏), few people (–º–∞–ª–æ –ª—é–¥–µ–π), little time (–º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏).</b>
'''
    await edit_media(callback_query,
                     "https://i.ytimg.com/vi/rduOjOijUU4/maxresdefault.jpg", text, kb.kb_learning_tenses)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ü–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥
@dp.callback_query_handler(lambda c: c.data == 'passive_voice')
async def passive_voice(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìó –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç <b>–¥–≤–∞</b> –∑–∞–ª–æ–≥–∞: <i>–∞–∫—Ç–∏–≤–Ω—ã–π (active)</i> –∏ <i>–ø–∞—Å—Å–∏–≤–Ω—ã–π (passive)</i>. –≤ –∞–∫—Ç–∏–≤–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç <b>—Å–∞–º</b> —Å—É–±—ä–µ–∫—Ç, –∞ –≤ –ø–∞—Å—Å–∏–≤–Ω–æ–º - –¥–µ–π—Å—Ç–≤–∏–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è <b>–Ω–∞–¥</b> —Å—É–±—ä–µ–∫—Ç–æ–º.
–ø—Ä–∏–º–µ—Ä: <b>he cleans the office every day. - –æ–Ω —É–±–∏—Ä–∞–µ—Ç –æ—Ñ–∏—Å –∫–∞–∂–¥–æ–µ —É—Ç—Ä–æ.</b> (–∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥) <b>the office is cleaned every day. - –æ—Ñ–∏—Å —É–±–∏—Ä–∞—é—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.</b> (–ø–∞—Å—Å–∏–≤–Ω—ã–π –∑–∞–ª–æ–≥)
üìó <b>–º–µ—Ç–æ–¥ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –∑–∞–ª–æ–≥–∞ –æ—Ç—Ä–∞–∂–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ.</b>
'''
    await edit_media(callback_query, "https://i.postimg.cc/xdM1MRRC/passive-voice.jpg", text, kb.kb_learning_tenses)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ö–æ—Å–≤–µ–Ω–Ω–∞—è —Ä–µ—á—å
@dp.callback_query_handler(lambda c: c.data == 'reported_speech')
async def reported_speech(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìï <b>–∫–æ—Å–≤–µ–Ω–Ω–∞—è —Ä–µ—á—å (reported speech)</b> - —ç—Ç–æ —á—å–∏-—Ç–æ —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –ª–∏—Ü–∞. –Ω–∞–ø—Ä–∏–º–µ—Ä:
<b>‚Äì she says, "i like english". - –æ–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç: "—è –ª—é–±–ª—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π".</b>
<b>‚Äì she says that she likes english. - –æ–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –ª—é–±–∏—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏–π.</b>
üìï –º—ã —É–±—Ä–∞–ª–∏ –∫–∞–≤—ã—á–∫–∏, –¥–æ–±–∞–≤–∏–ª–∏ —Å–æ—é–∑ <i>that</i>, –∑–∞–º–µ–Ω–∏–ª–∏ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –ø–æ —Å–º—ã—Å–ª—É –∏ –¥–æ–±–∞–≤–∏–ª–∏ <i>-s</i> –≤ –∫–æ–Ω–µ—Ü –≥–ª–∞–≥–æ–ª–∞.
üìï –ø–æ—Å–ª–µ –≥–ª–∞–≥–æ–ª–æ–≤ <b>say, know, think</b> —Å–æ—é–∑ <i>that</i> –º–æ–∂–Ω–æ –æ–ø—É—Å—Ç–∏—Ç—å.
‚ö† <b>–ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ –≤ –∫–æ—Å–≤–µ–Ω–Ω—É—é —Ä–µ—á—å –º–µ–Ω—è–µ—Ç—Å—è –≤—Ä–µ–º—è –∏ (–∏–ª–∏) –º–æ–¥–∞–ª—å–Ω—ã–π –≥–ª–∞–≥–æ–ª. —Ç–∞–±–ª–∏—Ü–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω –ø—Ä–∏–≤–µ–¥–µ–Ω–∞ –≤—ã—à–µ.</b>
‚ö† <b>–Ω–æ –≤—Ä–µ–º—è –º–æ–∂–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å, –µ—Å–ª–∏ –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ –æ –Ω–∞—É—á–Ω–æ–º —Ñ–∞–∫—Ç–µ, —É–ø–æ—Ç—Ä–µ–±–ª—è–µ—Ç–µ –≤—Ä–µ–º–µ–Ω–∞</b> <i>past simple/continuous</i> <b>—Å —Å–æ—é–∑–∞–º–∏</b> <i>when, since, if</i>.
    '''
    await edit_media(callback_query, "https://i.postimg.cc/SN5DNJLy/reported.jpg", text, kb.kb_learning_tenses)


# –∞–Ω–≥–ª–∏–π—Å–∫–∏–π, –ö–∞—É–∑–∞—Ç–∏–≤–Ω–∞—è —Ñ–æ—Ä–º–∞
@dp.callback_query_handler(lambda c: c.data == 'causative')
async def causative(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    text = '''
üìö –∫–∞—É–∑–∞—Ç–∏–≤ –æ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –º—ã –Ω–∞—Ö–æ–¥–∏–º —Ç—Ä–µ—Ç—å–∏—Ö –ª–∏—Ü, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è—Ç –∫–∞–∫—É—é-–ª–∏–±–æ —Ä–∞–±–æ—Ç—É –≤–º–µ—Å—Ç–æ –Ω–∞—Å.
üìö –ø—Ä–∏–º–µ—Ä: <b>she has flowers in her yard watered three times a week ‚Äì —Ü–≤–µ—Ç—ã –≤ –µ–µ –¥–≤–æ—Ä–µ –ø–æ–ª–∏–≤–∞—é—Ç —Ç—Ä–∏ —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é.</b>
üìö —Å—Ö–µ–º–∞: <b>–ø–æ–¥–ª–µ–∂–∞—â–µ–µ ‚Äì –∫–∞—É–∑–∞—Ç–∏–≤–Ω—ã–π –≥–ª–∞–≥–æ–ª (have/get) ‚Äì –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ ‚Äì 3 —Ñ–æ—Ä–º–∞ –≥–ª–∞–≥–æ–ª–∞</b>
üìö —Ä–∞–∑–Ω–∏—Ü–∞ <b>have –∏ get</b> –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ <b>have</b> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –∞ <b>get</b> - –∫–æ–≥–¥–∞ –Ω–∞–º —É–¥–∞–µ—Ç—Å—è –ø–æ–±—É–¥–∏—Ç—å —á–µ–ª–æ–≤–µ–∫–∞ —á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å –∏ –∞–∫—Ü–µ–Ω—Ç –∏–¥–µ—Ç –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å —É–±–µ–∂–¥–µ–Ω–∏—è.
—Ç–∞–∫–∂–µ –ø–æ—Å–ª–µ <b>have</b> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤ –±–µ–∑ —á–∞—Å—Ç–∏—Ü—ã <i>to</i>, –∞ –ø–æ—Å–ª–µ <b>get</b> - –ø–æ–ª–Ω—ã–π –∏–Ω—Ñ–∏–Ω–∏—Ç–∏–≤.
‚ö† <b>–∫–∞—É–∑–∞—Ç–∏–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –≤–æ –≤—Å–µ—Ö –≤–∏–¥–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ö. –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ –≤—ã—à–µ.</b>
    '''
    await edit_media(callback_query,
                     "https://mcenglish.ru/wp-content/uploads/2017/10/Screenshot_124-1.jpg", text,
                     kb.kb_learning_tenses)


# –ó–∞–ø—É—Å–∫
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
